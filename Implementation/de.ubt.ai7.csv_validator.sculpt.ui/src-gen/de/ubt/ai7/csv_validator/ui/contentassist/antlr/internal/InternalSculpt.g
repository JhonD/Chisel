/*
 * generated by Xtext
 */
grammar InternalSculpt;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package de.ubt.ai7.csv_validator.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.ubt.ai7.csv_validator.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.ubt.ai7.csv_validator.services.SculptGrammarAccess;

}

@parser::members {
 
 	private SculptGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SculptGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSculpt
entryRuleSculpt 
:
{ before(grammarAccess.getSculptRule()); }
	 ruleSculpt
{ after(grammarAccess.getSculptRule()); } 
	 EOF 
;

// Rule Sculpt
ruleSculpt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSculptAccess().getGroup()); }
(rule__Sculpt__Group__0)
{ after(grammarAccess.getSculptAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDelimiters
entryRuleDelimiters 
:
{ before(grammarAccess.getDelimitersRule()); }
	 ruleDelimiters
{ after(grammarAccess.getDelimitersRule()); } 
	 EOF 
;

// Rule Delimiters
ruleDelimiters
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDelimitersAccess().getUnorderedGroup()); }
(rule__Delimiters__UnorderedGroup)
{ after(grammarAccess.getDelimitersAccess().getUnorderedGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleToken
entryRuleToken 
:
{ before(grammarAccess.getTokenRule()); }
	 ruleToken
{ after(grammarAccess.getTokenRule()); } 
	 EOF 
;

// Rule Token
ruleToken
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTokenAccess().getGroup()); }
(rule__Token__Group__0)
{ after(grammarAccess.getTokenAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompoundTypePrimitive
entryRuleCompoundTypePrimitive 
:
{ before(grammarAccess.getCompoundTypePrimitiveRule()); }
	 ruleCompoundTypePrimitive
{ after(grammarAccess.getCompoundTypePrimitiveRule()); } 
	 EOF 
;

// Rule CompoundTypePrimitive
ruleCompoundTypePrimitive
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompoundTypePrimitiveAccess().getAlternatives()); }
(rule__CompoundTypePrimitive__Alternatives)
{ after(grammarAccess.getCompoundTypePrimitiveAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegionToken
entryRuleRegionToken 
:
{ before(grammarAccess.getRegionTokenRule()); }
	 ruleRegionToken
{ after(grammarAccess.getRegionTokenRule()); } 
	 EOF 
;

// Rule RegionToken
ruleRegionToken
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRegionTokenAccess().getGroup()); }
(rule__RegionToken__Group__0)
{ after(grammarAccess.getRegionTokenAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstraint
entryRuleConstraint 
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraintAccess().getAlternatives()); }
(rule__Constraint__Alternatives)
{ after(grammarAccess.getConstraintAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContentConstraint
entryRuleContentConstraint 
:
{ before(grammarAccess.getContentConstraintRule()); }
	 ruleContentConstraint
{ after(grammarAccess.getContentConstraintRule()); } 
	 EOF 
;

// Rule ContentConstraint
ruleContentConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContentConstraintAccess().getGroup()); }
(rule__ContentConstraint__Group__0)
{ after(grammarAccess.getContentConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryKeyConstraint
entryRulePrimaryKeyConstraint 
:
{ before(grammarAccess.getPrimaryKeyConstraintRule()); }
	 rulePrimaryKeyConstraint
{ after(grammarAccess.getPrimaryKeyConstraintRule()); } 
	 EOF 
;

// Rule PrimaryKeyConstraint
rulePrimaryKeyConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryKeyConstraintAccess().getGroup()); }
(rule__PrimaryKeyConstraint__Group__0)
{ after(grammarAccess.getPrimaryKeyConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForeignKeyConstraint
entryRuleForeignKeyConstraint 
:
{ before(grammarAccess.getForeignKeyConstraintRule()); }
	 ruleForeignKeyConstraint
{ after(grammarAccess.getForeignKeyConstraintRule()); } 
	 EOF 
;

// Rule ForeignKeyConstraint
ruleForeignKeyConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForeignKeyConstraintAccess().getGroup()); }
(rule__ForeignKeyConstraint__Group__0)
{ after(grammarAccess.getForeignKeyConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTupleSelector
entryRuleTupleSelector 
:
{ before(grammarAccess.getTupleSelectorRule()); }
	 ruleTupleSelector
{ after(grammarAccess.getTupleSelectorRule()); } 
	 EOF 
;

// Rule TupleSelector
ruleTupleSelector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTupleSelectorAccess().getGroup()); }
(rule__TupleSelector__Group__0)
{ after(grammarAccess.getTupleSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransformationProgram
entryRuleTransformationProgram 
:
{ before(grammarAccess.getTransformationProgramRule()); }
	 ruleTransformationProgram
{ after(grammarAccess.getTransformationProgramRule()); } 
	 EOF 
;

// Rule TransformationProgram
ruleTransformationProgram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransformationProgramAccess().getGroup()); }
(rule__TransformationProgram__Group__0)
{ after(grammarAccess.getTransformationProgramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNodeExpression
entryRuleNodeExpression 
:
{ before(grammarAccess.getNodeExpressionRule()); }
	 ruleNodeExpression
{ after(grammarAccess.getNodeExpressionRule()); } 
	 EOF 
;

// Rule NodeExpression
ruleNodeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeExpressionAccess().getNe_OrParserRuleCall()); }
	ruleNe_Or
{ after(grammarAccess.getNodeExpressionAccess().getNe_OrParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNe_Or
entryRuleNe_Or 
:
{ before(grammarAccess.getNe_OrRule()); }
	 ruleNe_Or
{ after(grammarAccess.getNe_OrRule()); } 
	 EOF 
;

// Rule Ne_Or
ruleNe_Or
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNe_OrAccess().getGroup()); }
(rule__Ne_Or__Group__0)
{ after(grammarAccess.getNe_OrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNe_And
entryRuleNe_And 
:
{ before(grammarAccess.getNe_AndRule()); }
	 ruleNe_And
{ after(grammarAccess.getNe_AndRule()); } 
	 EOF 
;

// Rule Ne_And
ruleNe_And
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNe_AndAccess().getGroup()); }
(rule__Ne_And__Group__0)
{ after(grammarAccess.getNe_AndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNe_Not
entryRuleNe_Not 
:
{ before(grammarAccess.getNe_NotRule()); }
	 ruleNe_Not
{ after(grammarAccess.getNe_NotRule()); } 
	 EOF 
;

// Rule Ne_Not
ruleNe_Not
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNe_NotAccess().getAlternatives()); }
(rule__Ne_Not__Alternatives)
{ after(grammarAccess.getNe_NotAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNe_Path
entryRuleNe_Path 
:
{ before(grammarAccess.getNe_PathRule()); }
	 ruleNe_Path
{ after(grammarAccess.getNe_PathRule()); } 
	 EOF 
;

// Rule Ne_Path
ruleNe_Path
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNe_PathAccess().getAlternatives()); }
(rule__Ne_Path__Alternatives)
{ after(grammarAccess.getNe_PathAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNe_Primitive
entryRuleNe_Primitive 
:
{ before(grammarAccess.getNe_PrimitiveRule()); }
	 ruleNe_Primitive
{ after(grammarAccess.getNe_PrimitiveRule()); } 
	 EOF 
;

// Rule Ne_Primitive
ruleNe_Primitive
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNe_PrimitiveAccess().getAlternatives()); }
(rule__Ne_Primitive__Alternatives)
{ after(grammarAccess.getNe_PrimitiveAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNe_Atomic
entryRuleNe_Atomic 
:
{ before(grammarAccess.getNe_AtomicRule()); }
	 ruleNe_Atomic
{ after(grammarAccess.getNe_AtomicRule()); } 
	 EOF 
;

// Rule Ne_Atomic
ruleNe_Atomic
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNe_AtomicAccess().getAlternatives()); }
(rule__Ne_Atomic__Alternatives)
{ after(grammarAccess.getNe_AtomicAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNe_Comparison
entryRuleNe_Comparison 
:
{ before(grammarAccess.getNe_ComparisonRule()); }
	 ruleNe_Comparison
{ after(grammarAccess.getNe_ComparisonRule()); } 
	 EOF 
;

// Rule Ne_Comparison
ruleNe_Comparison
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNe_ComparisonAccess().getAlternatives()); }
(rule__Ne_Comparison__Alternatives)
{ after(grammarAccess.getNe_ComparisonAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeSpecifier
entryRuleTypeSpecifier 
:
{ before(grammarAccess.getTypeSpecifierRule()); }
	 ruleTypeSpecifier
{ after(grammarAccess.getTypeSpecifierRule()); } 
	 EOF 
;

// Rule TypeSpecifier
ruleTypeSpecifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeSpecifierAccess().getAlternatives()); }
(rule__TypeSpecifier__Alternatives)
{ after(grammarAccess.getTypeSpecifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNe_Atomic_Node_Test
entryRuleNe_Atomic_Node_Test 
:
{ before(grammarAccess.getNe_Atomic_Node_TestRule()); }
	 ruleNe_Atomic_Node_Test
{ after(grammarAccess.getNe_Atomic_Node_TestRule()); } 
	 EOF 
;

// Rule Ne_Atomic_Node_Test
ruleNe_Atomic_Node_Test
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNe_Atomic_Node_TestAccess().getAlternatives()); }
(rule__Ne_Atomic_Node_Test__Alternatives)
{ after(grammarAccess.getNe_Atomic_Node_TestAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePath_Expression
entryRulePath_Expression 
:
{ before(grammarAccess.getPath_ExpressionRule()); }
	 rulePath_Expression
{ after(grammarAccess.getPath_ExpressionRule()); } 
	 EOF 
;

// Rule Path_Expression
rulePath_Expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPath_ExpressionAccess().getGroup()); }
(rule__Path_Expression__Group__0)
{ after(grammarAccess.getPath_ExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePe_Regex
entryRulePe_Regex 
:
{ before(grammarAccess.getPe_RegexRule()); }
	 rulePe_Regex
{ after(grammarAccess.getPe_RegexRule()); } 
	 EOF 
;

// Rule Pe_Regex
rulePe_Regex
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPe_RegexAccess().getGroup()); }
(rule__Pe_Regex__Group__0)
{ after(grammarAccess.getPe_RegexAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePe_Primitive
entryRulePe_Primitive 
:
{ before(grammarAccess.getPe_PrimitiveRule()); }
	 rulePe_Primitive
{ after(grammarAccess.getPe_PrimitiveRule()); } 
	 EOF 
;

// Rule Pe_Primitive
rulePe_Primitive
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPe_PrimitiveAccess().getAlternatives()); }
(rule__Pe_Primitive__Alternatives)
{ after(grammarAccess.getPe_PrimitiveAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePe_Or
entryRulePe_Or 
:
{ before(grammarAccess.getPe_OrRule()); }
	 rulePe_Or
{ after(grammarAccess.getPe_OrRule()); } 
	 EOF 
;

// Rule Pe_Or
rulePe_Or
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPe_OrAccess().getGroup()); }
(rule__Pe_Or__Group__0)
{ after(grammarAccess.getPe_OrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePe_Atomic
entryRulePe_Atomic 
:
{ before(grammarAccess.getPe_AtomicRule()); }
	 rulePe_Atomic
{ after(grammarAccess.getPe_AtomicRule()); } 
	 EOF 
;

// Rule Pe_Atomic
rulePe_Atomic
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPe_AtomicAccess().getGroup()); }
(rule__Pe_Atomic__Group__0)
{ after(grammarAccess.getPe_AtomicAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContentExpression
entryRuleContentExpression 
:
{ before(grammarAccess.getContentExpressionRule()); }
	 ruleContentExpression
{ after(grammarAccess.getContentExpressionRule()); } 
	 EOF 
;

// Rule ContentExpression
ruleContentExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContentExpressionAccess().getCe_OrParserRuleCall()); }
	ruleCe_Or
{ after(grammarAccess.getContentExpressionAccess().getCe_OrParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCe_Or
entryRuleCe_Or 
:
{ before(grammarAccess.getCe_OrRule()); }
	 ruleCe_Or
{ after(grammarAccess.getCe_OrRule()); } 
	 EOF 
;

// Rule Ce_Or
ruleCe_Or
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCe_OrAccess().getGroup()); }
(rule__Ce_Or__Group__0)
{ after(grammarAccess.getCe_OrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCe_List
entryRuleCe_List 
:
{ before(grammarAccess.getCe_ListRule()); }
	 ruleCe_List
{ after(grammarAccess.getCe_ListRule()); } 
	 EOF 
;

// Rule Ce_List
ruleCe_List
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCe_ListAccess().getGroup()); }
(rule__Ce_List__Group__0)
{ after(grammarAccess.getCe_ListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCe_Recursive
entryRuleCe_Recursive 
:
{ before(grammarAccess.getCe_RecursiveRule()); }
	 ruleCe_Recursive
{ after(grammarAccess.getCe_RecursiveRule()); } 
	 EOF 
;

// Rule Ce_Recursive
ruleCe_Recursive
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCe_RecursiveAccess().getGroup()); }
(rule__Ce_Recursive__Group__0)
{ after(grammarAccess.getCe_RecursiveAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCe_Primitive
entryRuleCe_Primitive 
:
{ before(grammarAccess.getCe_PrimitiveRule()); }
	 ruleCe_Primitive
{ after(grammarAccess.getCe_PrimitiveRule()); } 
	 EOF 
;

// Rule Ce_Primitive
ruleCe_Primitive
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCe_PrimitiveAccess().getAlternatives()); }
(rule__Ce_Primitive__Alternatives)
{ after(grammarAccess.getCe_PrimitiveAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCe_Atomic
entryRuleCe_Atomic 
:
{ before(grammarAccess.getCe_AtomicRule()); }
	 ruleCe_Atomic
{ after(grammarAccess.getCe_AtomicRule()); } 
	 EOF 
;

// Rule Ce_Atomic
ruleCe_Atomic
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCe_AtomicAccess().getAlternatives()); }
(rule__Ce_Atomic__Alternatives)
{ after(grammarAccess.getCe_AtomicAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCe_Comparison
entryRuleCe_Comparison 
:
{ before(grammarAccess.getCe_ComparisonRule()); }
	 ruleCe_Comparison
{ after(grammarAccess.getCe_ComparisonRule()); } 
	 EOF 
;

// Rule Ce_Comparison
ruleCe_Comparison
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCe_ComparisonAccess().getAlternatives()); }
(rule__Ce_Comparison__Alternatives)
{ after(grammarAccess.getCe_ComparisonAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTLVariable
entryRuleTLVariable 
:
{ before(grammarAccess.getTLVariableRule()); }
	 ruleTLVariable
{ after(grammarAccess.getTLVariableRule()); } 
	 EOF 
;

// Rule TLVariable
ruleTLVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTLVariableAccess().getNameAssignment()); }
(rule__TLVariable__NameAssignment)
{ after(grammarAccess.getTLVariableAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTLOutputPrimitive
entryRuleTLOutputPrimitive 
:
{ before(grammarAccess.getTLOutputPrimitiveRule()); }
	 ruleTLOutputPrimitive
{ after(grammarAccess.getTLOutputPrimitiveRule()); } 
	 EOF 
;

// Rule TLOutputPrimitive
ruleTLOutputPrimitive
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTLOutputPrimitiveAccess().getAlternatives()); }
(rule__TLOutputPrimitive__Alternatives)
{ after(grammarAccess.getTLOutputPrimitiveAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTL_Ce_List
entryRuleTL_Ce_List 
:
{ before(grammarAccess.getTL_Ce_ListRule()); }
	 ruleTL_Ce_List
{ after(grammarAccess.getTL_Ce_ListRule()); } 
	 EOF 
;

// Rule TL_Ce_List
ruleTL_Ce_List
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTL_Ce_ListAccess().getGroup()); }
(rule__TL_Ce_List__Group__0)
{ after(grammarAccess.getTL_Ce_ListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTL_Ce_Recursive
entryRuleTL_Ce_Recursive 
:
{ before(grammarAccess.getTL_Ce_RecursiveRule()); }
	 ruleTL_Ce_Recursive
{ after(grammarAccess.getTL_Ce_RecursiveRule()); } 
	 EOF 
;

// Rule TL_Ce_Recursive
ruleTL_Ce_Recursive
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTL_Ce_RecursiveAccess().getGroup()); }
(rule__TL_Ce_Recursive__Group__0)
{ after(grammarAccess.getTL_Ce_RecursiveAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTL_Ce_Atomic
entryRuleTL_Ce_Atomic 
:
{ before(grammarAccess.getTL_Ce_AtomicRule()); }
	 ruleTL_Ce_Atomic
{ after(grammarAccess.getTL_Ce_AtomicRule()); } 
	 EOF 
;

// Rule TL_Ce_Atomic
ruleTL_Ce_Atomic
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTL_Ce_AtomicAccess().getAlternatives()); }
(rule__TL_Ce_Atomic__Alternatives)
{ after(grammarAccess.getTL_Ce_AtomicAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTLOutput
entryRuleTLOutput 
:
{ before(grammarAccess.getTLOutputRule()); }
	 ruleTLOutput
{ after(grammarAccess.getTLOutputRule()); } 
	 EOF 
;

// Rule TLOutput
ruleTLOutput
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTLOutputAccess().getGroup()); }
(rule__TLOutput__Group__0)
{ after(grammarAccess.getTLOutputAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTLLoop
entryRuleTLLoop 
:
{ before(grammarAccess.getTLLoopRule()); }
	 ruleTLLoop
{ after(grammarAccess.getTLLoopRule()); } 
	 EOF 
;

// Rule TLLoop
ruleTLLoop
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTLLoopAccess().getGroup()); }
(rule__TLLoop__Group__0)
{ after(grammarAccess.getTLLoopAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTLStatement
entryRuleTLStatement 
:
{ before(grammarAccess.getTLStatementRule()); }
	 ruleTLStatement
{ after(grammarAccess.getTLStatementRule()); } 
	 EOF 
;

// Rule TLStatement
ruleTLStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTLStatementAccess().getAlternatives()); }
(rule__TLStatement__Alternatives)
{ after(grammarAccess.getTLStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTLIf
entryRuleTLIf 
:
{ before(grammarAccess.getTLIfRule()); }
	 ruleTLIf
{ after(grammarAccess.getTLIfRule()); } 
	 EOF 
;

// Rule TLIf
ruleTLIf
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTLIfAccess().getGroup()); }
(rule__TLIf__Group__0)
{ after(grammarAccess.getTLIfAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTLBoolExpr
entryRuleTLBoolExpr 
:
{ before(grammarAccess.getTLBoolExprRule()); }
	 ruleTLBoolExpr
{ after(grammarAccess.getTLBoolExprRule()); } 
	 EOF 
;

// Rule TLBoolExpr
ruleTLBoolExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTLBoolExprAccess().getAlternatives()); }
(rule__TLBoolExpr__Alternatives)
{ after(grammarAccess.getTLBoolExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTLBoolExprNot
entryRuleTLBoolExprNot 
:
{ before(grammarAccess.getTLBoolExprNotRule()); }
	 ruleTLBoolExprNot
{ after(grammarAccess.getTLBoolExprNotRule()); } 
	 EOF 
;

// Rule TLBoolExprNot
ruleTLBoolExprNot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTLBoolExprNotAccess().getGroup()); }
(rule__TLBoolExprNot__Group__0)
{ after(grammarAccess.getTLBoolExprNotAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTLBoolExprEmpty
entryRuleTLBoolExprEmpty 
:
{ before(grammarAccess.getTLBoolExprEmptyRule()); }
	 ruleTLBoolExprEmpty
{ after(grammarAccess.getTLBoolExprEmptyRule()); } 
	 EOF 
;

// Rule TLBoolExprEmpty
ruleTLBoolExprEmpty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTLBoolExprEmptyAccess().getGroup()); }
(rule__TLBoolExprEmpty__Group__0)
{ after(grammarAccess.getTLBoolExprEmptyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule RowCol
ruleRowCol
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRowColAccess().getAlternatives()); }
(rule__RowCol__Alternatives)
{ after(grammarAccess.getRowColAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Comparator
ruleComparator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparatorAccess().getAlternatives()); }
(rule__Comparator__Alternatives)
{ after(grammarAccess.getComparatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ValidationMode
ruleValidationMode
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidationModeAccess().getAlternatives()); }
(rule__ValidationMode__Alternatives)
{ after(grammarAccess.getValidationModeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule TLLoopMode
ruleTLLoopMode
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopModeAccess().getAlternatives()); }
(rule__TLLoopMode__Alternatives)
{ after(grammarAccess.getTLLoopModeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_0()); }
(rule__Type__Group_0__0)
{ after(grammarAccess.getTypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_1()); }
(rule__Type__Group_1__0)
{ after(grammarAccess.getTypeAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_2()); }
(rule__Type__Group_2__0)
{ after(grammarAccess.getTypeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives_0_4_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMinimumKeyword_0_4_6_0_0()); }

	'minimum' 

{ after(grammarAccess.getTypeAccess().getMinimumKeyword_0_4_6_0_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getMinInclusiveKeyword_0_4_6_0_1()); }

	'minInclusive' 

{ after(grammarAccess.getTypeAccess().getMinInclusiveKeyword_0_4_6_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives_0_4_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMaximumKeyword_0_4_7_0_0()); }

	'maximum' 

{ after(grammarAccess.getTypeAccess().getMaximumKeyword_0_4_7_0_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getMaxInclusiveKeyword_0_4_7_0_1()); }

	'maxInclusive' 

{ after(grammarAccess.getTypeAccess().getMaxInclusiveKeyword_0_4_7_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives_2_3_0_2_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMaxElementsAssignment_2_3_0_2_2_2_0()); }
(rule__Type__MaxElementsAssignment_2_3_0_2_2_2_0)
{ after(grammarAccess.getTypeAccess().getMaxElementsAssignment_2_3_0_2_2_2_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getUNBOUNDEDKeyword_2_3_0_2_2_2_1()); }

	'UNBOUNDED' 

{ after(grammarAccess.getTypeAccess().getUNBOUNDEDKeyword_2_3_0_2_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundTypePrimitive__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundTypePrimitiveAccess().getGroup_0()); }
(rule__CompoundTypePrimitive__Group_0__0)
{ after(grammarAccess.getCompoundTypePrimitiveAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCompoundTypePrimitiveAccess().getGroup_1()); }
(rule__CompoundTypePrimitive__Group_1__0)
{ after(grammarAccess.getCompoundTypePrimitiveAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getContentConstraintParserRuleCall_0()); }
	ruleContentConstraint
{ after(grammarAccess.getConstraintAccess().getContentConstraintParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConstraintAccess().getPrimaryKeyConstraintParserRuleCall_1()); }
	rulePrimaryKeyConstraint
{ after(grammarAccess.getConstraintAccess().getPrimaryKeyConstraintParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getConstraintAccess().getForeignKeyConstraintParserRuleCall_2()); }
	ruleForeignKeyConstraint
{ after(grammarAccess.getConstraintAccess().getForeignKeyConstraintParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Not__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_NotAccess().getGroup_0()); }
(rule__Ne_Not__Group_0__0)
{ after(grammarAccess.getNe_NotAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNe_NotAccess().getNe_PathParserRuleCall_1()); }
	ruleNe_Path
{ after(grammarAccess.getNe_NotAccess().getNe_PathParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Path__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_PathAccess().getGroup_0()); }
(rule__Ne_Path__Group_0__0)
{ after(grammarAccess.getNe_PathAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNe_PathAccess().getGroup_1()); }
(rule__Ne_Path__Group_1__0)
{ after(grammarAccess.getNe_PathAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getNe_PathAccess().getGroup_2()); }
(rule__Ne_Path__Group_2__0)
{ after(grammarAccess.getNe_PathAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Primitive__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_PrimitiveAccess().getGroup_0()); }
(rule__Ne_Primitive__Group_0__0)
{ after(grammarAccess.getNe_PrimitiveAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNe_PrimitiveAccess().getNe_ComparisonParserRuleCall_1()); }
	ruleNe_Comparison
{ after(grammarAccess.getNe_PrimitiveAccess().getNe_ComparisonParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNe_PrimitiveAccess().getNe_AtomicParserRuleCall_2()); }
	ruleNe_Atomic
{ after(grammarAccess.getNe_PrimitiveAccess().getNe_AtomicParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getNe_Atomic_Node_TestParserRuleCall_0()); }
	ruleNe_Atomic_Node_Test
{ after(grammarAccess.getNe_AtomicAccess().getNe_Atomic_Node_TestParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNe_AtomicAccess().getGroup_1()); }
(rule__Ne_Atomic__Group_1__0)
{ after(grammarAccess.getNe_AtomicAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getNe_AtomicAccess().getGroup_2()); }
(rule__Ne_Atomic__Group_2__0)
{ after(grammarAccess.getNe_AtomicAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getNe_AtomicAccess().getGroup_3()); }
(rule__Ne_Atomic__Group_3__0)
{ after(grammarAccess.getNe_AtomicAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getNe_AtomicAccess().getGroup_4()); }
(rule__Ne_Atomic__Group_4__0)
{ after(grammarAccess.getNe_AtomicAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getNe_AtomicAccess().getGroup_5()); }
(rule__Ne_Atomic__Group_5__0)
{ after(grammarAccess.getNe_AtomicAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getNe_AtomicAccess().getGroup_6()); }
(rule__Ne_Atomic__Group_6__0)
{ after(grammarAccess.getNe_AtomicAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Comparison__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_ComparisonAccess().getGroup_0()); }
(rule__Ne_Comparison__Group_0__0)
{ after(grammarAccess.getNe_ComparisonAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNe_ComparisonAccess().getGroup_1()); }
(rule__Ne_Comparison__Group_1__0)
{ after(grammarAccess.getNe_ComparisonAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getGroup_0()); }
(rule__TypeSpecifier__Group_0__0)
{ after(grammarAccess.getTypeSpecifierAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getGroup_1()); }
(rule__TypeSpecifier__Group_1__0)
{ after(grammarAccess.getTypeSpecifierAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic_Node_Test__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_Atomic_Node_TestAccess().getGroup_0()); }
(rule__Ne_Atomic_Node_Test__Group_0__0)
{ after(grammarAccess.getNe_Atomic_Node_TestAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNe_Atomic_Node_TestAccess().getGroup_1()); }
(rule__Ne_Atomic_Node_Test__Group_1__0)
{ after(grammarAccess.getNe_Atomic_Node_TestAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Regex__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_RegexAccess().getGroup_1_0()); }
(rule__Pe_Regex__Group_1_0__0)
{ after(grammarAccess.getPe_RegexAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getPe_RegexAccess().getGroup_1_1()); }
(rule__Pe_Regex__Group_1_1__0)
{ after(grammarAccess.getPe_RegexAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getPe_RegexAccess().getGroup_1_2()); }
(rule__Pe_Regex__Group_1_2__0)
{ after(grammarAccess.getPe_RegexAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Primitive__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_PrimitiveAccess().getGroup_0()); }
(rule__Pe_Primitive__Group_0__0)
{ after(grammarAccess.getPe_PrimitiveAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPe_PrimitiveAccess().getPe_AtomicParserRuleCall_1()); }
	rulePe_Atomic
{ after(grammarAccess.getPe_PrimitiveAccess().getPe_AtomicParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Atomic__AxesAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_AtomicAccess().getAxesRightKeyword_1_0_0()); }

	'right' 

{ after(grammarAccess.getPe_AtomicAccess().getAxesRightKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getPe_AtomicAccess().getAxesDownKeyword_1_0_1()); }

	'down' 

{ after(grammarAccess.getPe_AtomicAccess().getAxesDownKeyword_1_0_1()); }
)

    |(
{ before(grammarAccess.getPe_AtomicAccess().getAxesLeftKeyword_1_0_2()); }

	'left' 

{ after(grammarAccess.getPe_AtomicAccess().getAxesLeftKeyword_1_0_2()); }
)

    |(
{ before(grammarAccess.getPe_AtomicAccess().getAxesUpKeyword_1_0_3()); }

	'up' 

{ after(grammarAccess.getPe_AtomicAccess().getAxesUpKeyword_1_0_3()); }
)

    |(
{ before(grammarAccess.getPe_AtomicAccess().getAxesSelfKeyword_1_0_4()); }

	'self' 

{ after(grammarAccess.getPe_AtomicAccess().getAxesSelfKeyword_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Atomic__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_AtomicAccess().getGroup_2_0()); }
(rule__Pe_Atomic__Group_2_0__0)
{ after(grammarAccess.getPe_AtomicAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getPe_AtomicAccess().getColonColonAsteriskKeyword_2_1()); }

	'::*' 

{ after(grammarAccess.getPe_AtomicAccess().getColonColonAsteriskKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Recursive__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_RecursiveAccess().getGroup_1_0()); }
(rule__Ce_Recursive__Group_1_0__0)
{ after(grammarAccess.getCe_RecursiveAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getCe_RecursiveAccess().getGroup_1_1()); }
(rule__Ce_Recursive__Group_1_1__0)
{ after(grammarAccess.getCe_RecursiveAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getCe_RecursiveAccess().getGroup_1_2()); }
(rule__Ce_Recursive__Group_1_2__0)
{ after(grammarAccess.getCe_RecursiveAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Primitive__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_PrimitiveAccess().getGroup_0()); }
(rule__Ce_Primitive__Group_0__0)
{ after(grammarAccess.getCe_PrimitiveAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCe_PrimitiveAccess().getCe_ComparisonParserRuleCall_1()); }
	ruleCe_Comparison
{ after(grammarAccess.getCe_PrimitiveAccess().getCe_ComparisonParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getCe_PrimitiveAccess().getCe_AtomicParserRuleCall_2()); }
	ruleCe_Atomic
{ after(grammarAccess.getCe_PrimitiveAccess().getCe_AtomicParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Atomic__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_AtomicAccess().getGroup_0()); }
(rule__Ce_Atomic__Group_0__0)
{ after(grammarAccess.getCe_AtomicAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCe_AtomicAccess().getGroup_1()); }
(rule__Ce_Atomic__Group_1__0)
{ after(grammarAccess.getCe_AtomicAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getCe_AtomicAccess().getGroup_2()); }
(rule__Ce_Atomic__Group_2__0)
{ after(grammarAccess.getCe_AtomicAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getCe_AtomicAccess().getGroup_3()); }
(rule__Ce_Atomic__Group_3__0)
{ after(grammarAccess.getCe_AtomicAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getCe_AtomicAccess().getGroup_4()); }
(rule__Ce_Atomic__Group_4__0)
{ after(grammarAccess.getCe_AtomicAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getGroup_0()); }
(rule__Ce_Comparison__Group_0__0)
{ after(grammarAccess.getCe_ComparisonAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCe_ComparisonAccess().getGroup_1()); }
(rule__Ce_Comparison__Group_1__0)
{ after(grammarAccess.getCe_ComparisonAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getCe_ComparisonAccess().getGroup_2()); }
(rule__Ce_Comparison__Group_2__0)
{ after(grammarAccess.getCe_ComparisonAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getGroup_2_1_0()); }
(rule__Ce_Comparison__Group_2_1_0__0)
{ after(grammarAccess.getCe_ComparisonAccess().getGroup_2_1_0()); }
)

    |(
{ before(grammarAccess.getCe_ComparisonAccess().getValueAssignment_2_1_1()); }
(rule__Ce_Comparison__ValueAssignment_2_1_1)
{ after(grammarAccess.getCe_ComparisonAccess().getValueAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLOutputPrimitive__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLOutputPrimitiveAccess().getGroup_0()); }
(rule__TLOutputPrimitive__Group_0__0)
{ after(grammarAccess.getTLOutputPrimitiveAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTLOutputPrimitiveAccess().getGroup_1()); }
(rule__TLOutputPrimitive__Group_1__0)
{ after(grammarAccess.getTLOutputPrimitiveAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Recursive__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_RecursiveAccess().getGroup_1_0()); }
(rule__TL_Ce_Recursive__Group_1_0__0)
{ after(grammarAccess.getTL_Ce_RecursiveAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getTL_Ce_RecursiveAccess().getGroup_1_1()); }
(rule__TL_Ce_Recursive__Group_1_1__0)
{ after(grammarAccess.getTL_Ce_RecursiveAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getTL_Ce_RecursiveAccess().getGroup_1_2()); }
(rule__TL_Ce_Recursive__Group_1_2__0)
{ after(grammarAccess.getTL_Ce_RecursiveAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Atomic__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_AtomicAccess().getGroup_0()); }
(rule__TL_Ce_Atomic__Group_0__0)
{ after(grammarAccess.getTL_Ce_AtomicAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTL_Ce_AtomicAccess().getGroup_1()); }
(rule__TL_Ce_Atomic__Group_1__0)
{ after(grammarAccess.getTL_Ce_AtomicAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTL_Ce_AtomicAccess().getGroup_2()); }
(rule__TL_Ce_Atomic__Group_2__0)
{ after(grammarAccess.getTL_Ce_AtomicAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTL_Ce_AtomicAccess().getGroup_3()); }
(rule__TL_Ce_Atomic__Group_3__0)
{ after(grammarAccess.getTL_Ce_AtomicAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getTL_Ce_AtomicAccess().getGroup_4()); }
(rule__TL_Ce_Atomic__Group_4__0)
{ after(grammarAccess.getTL_Ce_AtomicAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLStatementAccess().getTLOutputParserRuleCall_0()); }
	ruleTLOutput
{ after(grammarAccess.getTLStatementAccess().getTLOutputParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTLStatementAccess().getTLLoopParserRuleCall_1()); }
	ruleTLLoop
{ after(grammarAccess.getTLStatementAccess().getTLLoopParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTLStatementAccess().getTLIfParserRuleCall_2()); }
	ruleTLIf
{ after(grammarAccess.getTLStatementAccess().getTLIfParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLBoolExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLBoolExprAccess().getTLBoolExprNotParserRuleCall_0()); }
(	ruleTLBoolExprNot)
{ after(grammarAccess.getTLBoolExprAccess().getTLBoolExprNotParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTLBoolExprAccess().getTLBoolExprEmptyParserRuleCall_1()); }
	ruleTLBoolExprEmpty
{ after(grammarAccess.getTLBoolExprAccess().getTLBoolExprEmptyParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RowCol__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRowColAccess().getROWEnumLiteralDeclaration_0()); }
(	'row' 
)
{ after(grammarAccess.getRowColAccess().getROWEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRowColAccess().getCOLEnumLiteralDeclaration_1()); }
(	'col' 
)
{ after(grammarAccess.getRowColAccess().getCOLEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparatorAccess().getLTEnumLiteralDeclaration_0()); }
(	'<' 
)
{ after(grammarAccess.getComparatorAccess().getLTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getComparatorAccess().getLTEQEnumLiteralDeclaration_1()); }
(	'<=' 
)
{ after(grammarAccess.getComparatorAccess().getLTEQEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getComparatorAccess().getEQEnumLiteralDeclaration_2()); }
(	'=' 
)
{ after(grammarAccess.getComparatorAccess().getEQEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getComparatorAccess().getGTEnumLiteralDeclaration_3()); }
(	'>' 
)
{ after(grammarAccess.getComparatorAccess().getGTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getComparatorAccess().getGTEQEnumLiteralDeclaration_4()); }
(	'>=' 
)
{ after(grammarAccess.getComparatorAccess().getGTEQEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getComparatorAccess().getNEQEnumLiteralDeclaration_5()); }
(	'!=' 
)
{ after(grammarAccess.getComparatorAccess().getNEQEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationMode__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidationModeAccess().getCOMPLETEEnumLiteralDeclaration_0()); }
(	'=>' 
)
{ after(grammarAccess.getValidationModeAccess().getCOMPLETEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getValidationModeAccess().getROW_BY_ROWEnumLiteralDeclaration_1()); }
(	'->' 
)
{ after(grammarAccess.getValidationModeAccess().getROW_BY_ROWEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getValidationModeAccess().getCOLUMN_BY_COLUMNEnumLiteralDeclaration_2()); }
(	'|>' 
)
{ after(grammarAccess.getValidationModeAccess().getCOLUMN_BY_COLUMNEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoopMode__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopModeAccess().getCOMPLETEEnumLiteralDeclaration_0()); }
(	'is' 
)
{ after(grammarAccess.getTLLoopModeAccess().getCOMPLETEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTLLoopModeAccess().getSPLITEnumLiteralDeclaration_1()); }
(	'split' 
)
{ after(grammarAccess.getTLLoopModeAccess().getSPLITEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Sculpt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sculpt__Group__0__Impl
	rule__Sculpt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getSculptAction_0()); }
(

)
{ after(grammarAccess.getSculptAccess().getSculptAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sculpt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sculpt__Group__1__Impl
	rule__Sculpt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getGroup_1()); }
(rule__Sculpt__Group_1__0)?
{ after(grammarAccess.getSculptAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sculpt__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sculpt__Group__2__Impl
	rule__Sculpt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getGroup_2()); }
(rule__Sculpt__Group_2__0)?
{ after(grammarAccess.getSculptAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sculpt__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sculpt__Group__3__Impl
	rule__Sculpt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getGroup_3()); }
(rule__Sculpt__Group_3__0)?
{ after(grammarAccess.getSculptAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sculpt__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sculpt__Group__4__Impl
	rule__Sculpt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getGroup_4()); }
(rule__Sculpt__Group_4__0)?
{ after(grammarAccess.getSculptAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sculpt__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sculpt__Group__5__Impl
	rule__Sculpt__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getGroup_5()); }
(rule__Sculpt__Group_5__0)?
{ after(grammarAccess.getSculptAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sculpt__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sculpt__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getGroup_6()); }
(rule__Sculpt__Group_6__0)?
{ after(grammarAccess.getSculptAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Sculpt__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sculpt__Group_1__0__Impl
	rule__Sculpt__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getDELIMITERSKeyword_1_0()); }

	'DELIMITERS' 

{ after(grammarAccess.getSculptAccess().getDELIMITERSKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sculpt__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sculpt__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getDelimiterAssignment_1_1()); }
(rule__Sculpt__DelimiterAssignment_1_1)
{ after(grammarAccess.getSculptAccess().getDelimiterAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sculpt__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sculpt__Group_2__0__Impl
	rule__Sculpt__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getTYPESKeyword_2_0()); }

	'TYPES' 

{ after(grammarAccess.getSculptAccess().getTYPESKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sculpt__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sculpt__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getTypesAssignment_2_1()); }
(rule__Sculpt__TypesAssignment_2_1)*
{ after(grammarAccess.getSculptAccess().getTypesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sculpt__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sculpt__Group_3__0__Impl
	rule__Sculpt__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getTOKENSKeyword_3_0()); }

	'TOKENS' 

{ after(grammarAccess.getSculptAccess().getTOKENSKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sculpt__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sculpt__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getTokensAssignment_3_1()); }
(rule__Sculpt__TokensAssignment_3_1)*
{ after(grammarAccess.getSculptAccess().getTokensAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sculpt__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sculpt__Group_4__0__Impl
	rule__Sculpt__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getREGIONSKeyword_4_0()); }

	'REGIONS' 

{ after(grammarAccess.getSculptAccess().getREGIONSKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sculpt__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sculpt__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getRegionTokensAssignment_4_1()); }
(rule__Sculpt__RegionTokensAssignment_4_1)*
{ after(grammarAccess.getSculptAccess().getRegionTokensAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sculpt__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sculpt__Group_5__0__Impl
	rule__Sculpt__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getRULESKeyword_5_0()); }

	'RULES' 

{ after(grammarAccess.getSculptAccess().getRULESKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sculpt__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sculpt__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getConstraintsAssignment_5_1()); }
(rule__Sculpt__ConstraintsAssignment_5_1)*
{ after(grammarAccess.getSculptAccess().getConstraintsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sculpt__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sculpt__Group_6__0__Impl
	rule__Sculpt__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getTRANSFORMATIONPROGRAMKeyword_6_0()); }

	'TRANSFORMATION PROGRAM' 

{ after(grammarAccess.getSculptAccess().getTRANSFORMATIONPROGRAMKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sculpt__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sculpt__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getTransformationProgramAssignment_6_1()); }
(rule__Sculpt__TransformationProgramAssignment_6_1)
{ after(grammarAccess.getSculptAccess().getTransformationProgramAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Delimiters__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delimiters__Group_0_0__0__Impl
	rule__Delimiters__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delimiters__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelimitersAccess().getRowDelimKeyword_0_0_0()); }

	'Row delim' 

{ after(grammarAccess.getDelimitersAccess().getRowDelimKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delimiters__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delimiters__Group_0_0__1__Impl
	rule__Delimiters__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Delimiters__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelimitersAccess().getEqualsSignKeyword_0_0_1()); }

	'=' 

{ after(grammarAccess.getDelimitersAccess().getEqualsSignKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delimiters__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delimiters__Group_0_0__2__Impl
	rule__Delimiters__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Delimiters__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelimitersAccess().getRowDelimAssignment_0_0_2()); }
(rule__Delimiters__RowDelimAssignment_0_0_2)
{ after(grammarAccess.getDelimitersAccess().getRowDelimAssignment_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delimiters__Group_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delimiters__Group_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delimiters__Group_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelimitersAccess().getSemicolonKeyword_0_0_3()); }
(
	';' 
)?
{ after(grammarAccess.getDelimitersAccess().getSemicolonKeyword_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Delimiters__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delimiters__Group_0_1__0__Impl
	rule__Delimiters__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delimiters__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelimitersAccess().getColDelimKeyword_0_1_0()); }

	'Col delim' 

{ after(grammarAccess.getDelimitersAccess().getColDelimKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delimiters__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delimiters__Group_0_1__1__Impl
	rule__Delimiters__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Delimiters__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelimitersAccess().getEqualsSignKeyword_0_1_1()); }

	'=' 

{ after(grammarAccess.getDelimitersAccess().getEqualsSignKeyword_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delimiters__Group_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delimiters__Group_0_1__2__Impl
	rule__Delimiters__Group_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Delimiters__Group_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelimitersAccess().getColDelimAssignment_0_1_2()); }
(rule__Delimiters__ColDelimAssignment_0_1_2)
{ after(grammarAccess.getDelimitersAccess().getColDelimAssignment_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delimiters__Group_0_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delimiters__Group_0_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delimiters__Group_0_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelimitersAccess().getSemicolonKeyword_0_1_3()); }
(
	';' 
)?
{ after(grammarAccess.getDelimitersAccess().getSemicolonKeyword_0_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Delimiters__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delimiters__Group_1__0__Impl
	rule__Delimiters__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delimiters__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelimitersAccess().getListDelimKeyword_1_0()); }

	'List delim' 

{ after(grammarAccess.getDelimitersAccess().getListDelimKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delimiters__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delimiters__Group_1__1__Impl
	rule__Delimiters__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Delimiters__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelimitersAccess().getEqualsSignKeyword_1_1()); }

	'=' 

{ after(grammarAccess.getDelimitersAccess().getEqualsSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delimiters__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delimiters__Group_1__2__Impl
	rule__Delimiters__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Delimiters__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelimitersAccess().getListDelimAssignment_1_2()); }
(rule__Delimiters__ListDelimAssignment_1_2)
{ after(grammarAccess.getDelimitersAccess().getListDelimAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delimiters__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delimiters__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delimiters__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelimitersAccess().getSemicolonKeyword_1_3()); }
(
	';' 
)?
{ after(grammarAccess.getDelimitersAccess().getSemicolonKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Type__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0__0__Impl
	rule__Type__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getAtomicTypeAction_0_0()); }
(

)
{ after(grammarAccess.getTypeAccess().getAtomicTypeAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0__1__Impl
	rule__Type__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameAssignment_0_1()); }
(rule__Type__NameAssignment_0_1)
{ after(grammarAccess.getTypeAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0__2__Impl
	rule__Type__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getColonKeyword_0_2()); }

	':' 

{ after(grammarAccess.getTypeAccess().getColonKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0__3__Impl
	rule__Type__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_0_3()); }
(rule__Type__Group_0_3__0)
{ after(grammarAccess.getTypeAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0__4__Impl
	rule__Type__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getUnorderedGroup_0_4()); }
(rule__Type__UnorderedGroup_0_4)
{ after(grammarAccess.getTypeAccess().getUnorderedGroup_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSemicolonKeyword_0_5()); }
(
	';' 
)?
{ after(grammarAccess.getTypeAccess().getSemicolonKeyword_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Type__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_3__0__Impl
	rule__Type__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getBaseKeyword_0_3_0()); }

	'base' 

{ after(grammarAccess.getTypeAccess().getBaseKeyword_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_3__1__Impl
	rule__Type__Group_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_3_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getBaseAssignment_0_3_2()); }
(rule__Type__BaseAssignment_0_3_2)
{ after(grammarAccess.getTypeAccess().getBaseAssignment_0_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_0_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_0__0__Impl
	rule__Type__Group_0_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getFormatKeyword_0_4_0_0()); }

	'format' 

{ after(grammarAccess.getTypeAccess().getFormatKeyword_0_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_0__1__Impl
	rule__Type__Group_0_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_0_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getFormatAssignment_0_4_0_2()); }
(rule__Type__FormatAssignment_0_4_0_2)
{ after(grammarAccess.getTypeAccess().getFormatAssignment_0_4_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_0_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_1__0__Impl
	rule__Type__Group_0_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDecimalCharKeyword_0_4_1_0()); }

	'decimalChar' 

{ after(grammarAccess.getTypeAccess().getDecimalCharKeyword_0_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_1__1__Impl
	rule__Type__Group_0_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_1_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDecimalCharAssignment_0_4_1_2()); }
(rule__Type__DecimalCharAssignment_0_4_1_2)
{ after(grammarAccess.getTypeAccess().getDecimalCharAssignment_0_4_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_0_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_2__0__Impl
	rule__Type__Group_0_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroupCharKeyword_0_4_2_0()); }

	'groupChar' 

{ after(grammarAccess.getTypeAccess().getGroupCharKeyword_0_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_2__1__Impl
	rule__Type__Group_0_4_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_2_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroupCharAssignment_0_4_2_2()); }
(rule__Type__GroupCharAssignment_0_4_2_2)
{ after(grammarAccess.getTypeAccess().getGroupCharAssignment_0_4_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_0_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_3__0__Impl
	rule__Type__Group_0_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLengthKeyword_0_4_3_0()); }

	'length' 

{ after(grammarAccess.getTypeAccess().getLengthKeyword_0_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_3__1__Impl
	rule__Type__Group_0_4_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_3_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLengthAssignment_0_4_3_2()); }
(rule__Type__LengthAssignment_0_4_3_2)
{ after(grammarAccess.getTypeAccess().getLengthAssignment_0_4_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_0_4_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_4__0__Impl
	rule__Type__Group_0_4_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMinLengthKeyword_0_4_4_0()); }

	'minLength' 

{ after(grammarAccess.getTypeAccess().getMinLengthKeyword_0_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_4__1__Impl
	rule__Type__Group_0_4_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_4_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMinLengthAssignment_0_4_4_2()); }
(rule__Type__MinLengthAssignment_0_4_4_2)
{ after(grammarAccess.getTypeAccess().getMinLengthAssignment_0_4_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_0_4_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_5__0__Impl
	rule__Type__Group_0_4_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMaxLengthKeyword_0_4_5_0()); }

	'maxLength' 

{ after(grammarAccess.getTypeAccess().getMaxLengthKeyword_0_4_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_5__1__Impl
	rule__Type__Group_0_4_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_5_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMaxLengthAssignment_0_4_5_2()); }
(rule__Type__MaxLengthAssignment_0_4_5_2)
{ after(grammarAccess.getTypeAccess().getMaxLengthAssignment_0_4_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_0_4_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_6__0__Impl
	rule__Type__Group_0_4_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getAlternatives_0_4_6_0()); }
(rule__Type__Alternatives_0_4_6_0)
{ after(grammarAccess.getTypeAccess().getAlternatives_0_4_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_6__1__Impl
	rule__Type__Group_0_4_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_6_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMinimumAssignment_0_4_6_2()); }
(rule__Type__MinimumAssignment_0_4_6_2)
{ after(grammarAccess.getTypeAccess().getMinimumAssignment_0_4_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_0_4_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_7__0__Impl
	rule__Type__Group_0_4_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getAlternatives_0_4_7_0()); }
(rule__Type__Alternatives_0_4_7_0)
{ after(grammarAccess.getTypeAccess().getAlternatives_0_4_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_7__1__Impl
	rule__Type__Group_0_4_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_7_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMaximumAssignment_0_4_7_2()); }
(rule__Type__MaximumAssignment_0_4_7_2)
{ after(grammarAccess.getTypeAccess().getMaximumAssignment_0_4_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_0_4_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_8__0__Impl
	rule__Type__Group_0_4_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMinExclusiveKeyword_0_4_8_0()); }

	'minExclusive' 

{ after(grammarAccess.getTypeAccess().getMinExclusiveKeyword_0_4_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_8__1__Impl
	rule__Type__Group_0_4_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_8_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMinExclusiveAssignment_0_4_8_2()); }
(rule__Type__MinExclusiveAssignment_0_4_8_2)
{ after(grammarAccess.getTypeAccess().getMinExclusiveAssignment_0_4_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_0_4_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_9__0__Impl
	rule__Type__Group_0_4_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMaxExclusiveKeyword_0_4_9_0()); }

	'maxExclusive' 

{ after(grammarAccess.getTypeAccess().getMaxExclusiveKeyword_0_4_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_9__1__Impl
	rule__Type__Group_0_4_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_9_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMaxExclusiveAssignment_0_4_9_2()); }
(rule__Type__MaxExclusiveAssignment_0_4_9_2)
{ after(grammarAccess.getTypeAccess().getMaxExclusiveAssignment_0_4_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_0_4_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_10__0__Impl
	rule__Type__Group_0_4_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDefaultKeyword_0_4_10_0()); }

	'default' 

{ after(grammarAccess.getTypeAccess().getDefaultKeyword_0_4_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_10__1__Impl
	rule__Type__Group_0_4_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_10_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDefaultValueAssignment_0_4_10_2()); }
(rule__Type__DefaultValueAssignment_0_4_10_2)
{ after(grammarAccess.getTypeAccess().getDefaultValueAssignment_0_4_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_0_4_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_11__0__Impl
	rule__Type__Group_0_4_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEmptyKeyword_0_4_11_0()); }

	'empty' 

{ after(grammarAccess.getTypeAccess().getEmptyKeyword_0_4_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_11__1__Impl
	rule__Type__Group_0_4_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_11_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_0_4_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_4_11__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0_4_11__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_4_11__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEmptyValueAssignment_0_4_11_2()); }
(rule__Type__EmptyValueAssignment_0_4_11_2)
{ after(grammarAccess.getTypeAccess().getEmptyValueAssignment_0_4_11_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__0__Impl
	rule__Type__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getCompoundTypeAction_1_0()); }
(

)
{ after(grammarAccess.getTypeAccess().getCompoundTypeAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__1__Impl
	rule__Type__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameAssignment_1_1()); }
(rule__Type__NameAssignment_1_1)
{ after(grammarAccess.getTypeAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__2__Impl
	rule__Type__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getColonKeyword_1_2()); }

	':' 

{ after(grammarAccess.getTypeAccess().getColonKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__3__Impl
	rule__Type__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_1_3()); }
(rule__Type__Group_1_3__0)*
{ after(grammarAccess.getTypeAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__4__Impl
	rule__Type__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPrimitivesAssignment_1_4()); }
(rule__Type__PrimitivesAssignment_1_4)
{ after(grammarAccess.getTypeAccess().getPrimitivesAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__5__Impl
	rule__Type__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getUnorderedGroup_1_5()); }
(rule__Type__UnorderedGroup_1_5)
{ after(grammarAccess.getTypeAccess().getUnorderedGroup_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSemicolonKeyword_1_6()); }
(
	';' 
)?
{ after(grammarAccess.getTypeAccess().getSemicolonKeyword_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Type__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1_3__0__Impl
	rule__Type__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPrimitivesAssignment_1_3_0()); }
(rule__Type__PrimitivesAssignment_1_3_0)
{ after(grammarAccess.getTypeAccess().getPrimitivesAssignment_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPlusSignKeyword_1_3_1()); }
(
	'+' 
)?
{ after(grammarAccess.getTypeAccess().getPlusSignKeyword_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_1_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1_5_0__0__Impl
	rule__Type__Group_1_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDefaultKeyword_1_5_0_0()); }

	'default' 

{ after(grammarAccess.getTypeAccess().getDefaultKeyword_1_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1_5_0__1__Impl
	rule__Type__Group_1_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_1_5_0_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_1_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1_5_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_5_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDefaultValueAssignment_1_5_0_2()); }
(rule__Type__DefaultValueAssignment_1_5_0_2)
{ after(grammarAccess.getTypeAccess().getDefaultValueAssignment_1_5_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_1_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1_5_1__0__Impl
	rule__Type__Group_1_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEmptyKeyword_1_5_1_0()); }

	'empty' 

{ after(grammarAccess.getTypeAccess().getEmptyKeyword_1_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1_5_1__1__Impl
	rule__Type__Group_1_5_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_1_5_1_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_1_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1_5_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1_5_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_5_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEmptyValueAssignment_1_5_1_2()); }
(rule__Type__EmptyValueAssignment_1_5_1_2)
{ after(grammarAccess.getTypeAccess().getEmptyValueAssignment_1_5_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2__0__Impl
	rule__Type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getListTypeAction_2_0()); }
(

)
{ after(grammarAccess.getTypeAccess().getListTypeAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2__1__Impl
	rule__Type__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameAssignment_2_1()); }
(rule__Type__NameAssignment_2_1)
{ after(grammarAccess.getTypeAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2__2__Impl
	rule__Type__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getColonKeyword_2_2()); }

	':' 

{ after(grammarAccess.getTypeAccess().getColonKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2__3__Impl
	rule__Type__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getUnorderedGroup_2_3()); }
(rule__Type__UnorderedGroup_2_3)
{ after(grammarAccess.getTypeAccess().getUnorderedGroup_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSemicolonKeyword_2_4()); }
(
	';' 
)?
{ after(grammarAccess.getTypeAccess().getSemicolonKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Type__Group_2_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_0__0__Impl
	rule__Type__Group_2_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getListKeyword_2_3_0_0()); }

	'list' 

{ after(grammarAccess.getTypeAccess().getListKeyword_2_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_0__1__Impl
	rule__Type__Group_2_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLessThanSignKeyword_2_3_0_1()); }

	'<' 

{ after(grammarAccess.getTypeAccess().getLessThanSignKeyword_2_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_0__2__Impl
	rule__Type__Group_2_3_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getUnorderedGroup_2_3_0_2()); }
(rule__Type__UnorderedGroup_2_3_0_2)
{ after(grammarAccess.getTypeAccess().getUnorderedGroup_2_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_3_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGreaterThanSignKeyword_2_3_0_3()); }

	'>' 

{ after(grammarAccess.getTypeAccess().getGreaterThanSignKeyword_2_3_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Type__Group_2_3_0_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_0_2_0__0__Impl
	rule__Type__Group_2_3_0_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_0_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getBaseKeyword_2_3_0_2_0_0()); }

	'base' 

{ after(grammarAccess.getTypeAccess().getBaseKeyword_2_3_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_3_0_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_0_2_0__1__Impl
	rule__Type__Group_2_3_0_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_0_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_2_3_0_2_0_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_2_3_0_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_3_0_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_0_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_0_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getBaseAssignment_2_3_0_2_0_2()); }
(rule__Type__BaseAssignment_2_3_0_2_0_2)
{ after(grammarAccess.getTypeAccess().getBaseAssignment_2_3_0_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_2_3_0_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_0_2_1__0__Impl
	rule__Type__Group_2_3_0_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_0_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMinElementsKeyword_2_3_0_2_1_0()); }

	'minElements' 

{ after(grammarAccess.getTypeAccess().getMinElementsKeyword_2_3_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_3_0_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_0_2_1__1__Impl
	rule__Type__Group_2_3_0_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_0_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_2_3_0_2_1_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_2_3_0_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_3_0_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_0_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_0_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMinElementsAssignment_2_3_0_2_1_2()); }
(rule__Type__MinElementsAssignment_2_3_0_2_1_2)
{ after(grammarAccess.getTypeAccess().getMinElementsAssignment_2_3_0_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_2_3_0_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_0_2_2__0__Impl
	rule__Type__Group_2_3_0_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_0_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMaxElementsKeyword_2_3_0_2_2_0()); }

	'maxElements' 

{ after(grammarAccess.getTypeAccess().getMaxElementsKeyword_2_3_0_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_3_0_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_0_2_2__1__Impl
	rule__Type__Group_2_3_0_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_0_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_2_3_0_2_2_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_2_3_0_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_3_0_2_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_0_2_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_0_2_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getAlternatives_2_3_0_2_2_2()); }
(rule__Type__Alternatives_2_3_0_2_2_2)
{ after(grammarAccess.getTypeAccess().getAlternatives_2_3_0_2_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_2_3_0_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_0_2_3__0__Impl
	rule__Type__Group_2_3_0_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_0_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSeparatorKeyword_2_3_0_2_3_0()); }

	'separator' 

{ after(grammarAccess.getTypeAccess().getSeparatorKeyword_2_3_0_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_3_0_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_0_2_3__1__Impl
	rule__Type__Group_2_3_0_2_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_0_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_2_3_0_2_3_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_2_3_0_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_3_0_2_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_0_2_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_0_2_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSeparatorAssignment_2_3_0_2_3_2()); }
(rule__Type__SeparatorAssignment_2_3_0_2_3_2)
{ after(grammarAccess.getTypeAccess().getSeparatorAssignment_2_3_0_2_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_2_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_1__0__Impl
	rule__Type__Group_2_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDefaultKeyword_2_3_1_0()); }

	'default' 

{ after(grammarAccess.getTypeAccess().getDefaultKeyword_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_1__1__Impl
	rule__Type__Group_2_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_2_3_1_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_2_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDefaultValueAssignment_2_3_1_2()); }
(rule__Type__DefaultValueAssignment_2_3_1_2)
{ after(grammarAccess.getTypeAccess().getDefaultValueAssignment_2_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_2_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_2__0__Impl
	rule__Type__Group_2_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEmptyKeyword_2_3_2_0()); }

	'empty' 

{ after(grammarAccess.getTypeAccess().getEmptyKeyword_2_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_2__1__Impl
	rule__Type__Group_2_3_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_2_3_2_1()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_2_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_3_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_3_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_3_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEmptyValueAssignment_2_3_2_2()); }
(rule__Type__EmptyValueAssignment_2_3_2_2)
{ after(grammarAccess.getTypeAccess().getEmptyValueAssignment_2_3_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Token__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Token__Group__0__Impl
	rule__Token__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Token__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTokenAccess().getTokenAction_0()); }
(

)
{ after(grammarAccess.getTokenAccess().getTokenAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Token__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Token__Group__1__Impl
	rule__Token__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Token__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTokenAccess().getNameAssignment_1()); }
(rule__Token__NameAssignment_1)
{ after(grammarAccess.getTokenAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Token__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Token__Group__2__Impl
	rule__Token__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Token__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTokenAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getTokenAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Token__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Token__Group__3__Impl
	rule__Token__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Token__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTokenAccess().getTokenRegexAssignment_3()); }
(rule__Token__TokenRegexAssignment_3)
{ after(grammarAccess.getTokenAccess().getTokenRegexAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Token__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Token__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Token__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTokenAccess().getSemicolonKeyword_4()); }
(
	';' 
)?
{ after(grammarAccess.getTokenAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__CompoundTypePrimitive__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundTypePrimitive__Group_0__0__Impl
	rule__CompoundTypePrimitive__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundTypePrimitive__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundTypePrimitiveAccess().getCompoundTypePrimitiveAction_0_0()); }
(

)
{ after(grammarAccess.getCompoundTypePrimitiveAccess().getCompoundTypePrimitiveAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundTypePrimitive__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundTypePrimitive__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundTypePrimitive__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundTypePrimitiveAccess().getTextAssignment_0_1()); }
(rule__CompoundTypePrimitive__TextAssignment_0_1)
{ after(grammarAccess.getCompoundTypePrimitiveAccess().getTextAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompoundTypePrimitive__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundTypePrimitive__Group_1__0__Impl
	rule__CompoundTypePrimitive__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundTypePrimitive__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundTypePrimitiveAccess().getCompoundTypePrimitiveAction_1_0()); }
(

)
{ after(grammarAccess.getCompoundTypePrimitiveAccess().getCompoundTypePrimitiveAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundTypePrimitive__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundTypePrimitive__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundTypePrimitive__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundTypePrimitiveAccess().getTypeAssignment_1_1()); }
(rule__CompoundTypePrimitive__TypeAssignment_1_1)
{ after(grammarAccess.getCompoundTypePrimitiveAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RegionToken__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionToken__Group__0__Impl
	rule__RegionToken__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionToken__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionTokenAccess().getRegionTokenAction_0()); }
(

)
{ after(grammarAccess.getRegionTokenAccess().getRegionTokenAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionToken__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionToken__Group__1__Impl
	rule__RegionToken__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionToken__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionTokenAccess().getNameAssignment_1()); }
(rule__RegionToken__NameAssignment_1)
{ after(grammarAccess.getRegionTokenAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionToken__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionToken__Group__2__Impl
	rule__RegionToken__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionToken__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionTokenAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getRegionTokenAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionToken__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionToken__Group__3__Impl
	rule__RegionToken__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionToken__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionTokenAccess().getRegionAssignment_3()); }
(rule__RegionToken__RegionAssignment_3)
{ after(grammarAccess.getRegionTokenAccess().getRegionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionToken__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionToken__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionToken__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionTokenAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getRegionTokenAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ContentConstraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContentConstraint__Group__0__Impl
	rule__ContentConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContentConstraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentConstraintAccess().getRegionAssignment_0()); }
(rule__ContentConstraint__RegionAssignment_0)
{ after(grammarAccess.getContentConstraintAccess().getRegionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContentConstraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContentConstraint__Group__1__Impl
	rule__ContentConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContentConstraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentConstraintAccess().getValidationModeAssignment_1()); }
(rule__ContentConstraint__ValidationModeAssignment_1)
{ after(grammarAccess.getContentConstraintAccess().getValidationModeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContentConstraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContentConstraint__Group__2__Impl
	rule__ContentConstraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContentConstraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentConstraintAccess().getContentExpressionAssignment_2()); }
(rule__ContentConstraint__ContentExpressionAssignment_2)
{ after(grammarAccess.getContentConstraintAccess().getContentExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContentConstraint__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContentConstraint__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContentConstraint__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentConstraintAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getContentConstraintAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PrimaryKeyConstraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryKeyConstraint__Group__0__Impl
	rule__PrimaryKeyConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKeyConstraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryKeyConstraintAccess().getPrimaryKeyword_0()); }

	'primary' 

{ after(grammarAccess.getPrimaryKeyConstraintAccess().getPrimaryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryKeyConstraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryKeyConstraint__Group__1__Impl
	rule__PrimaryKeyConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKeyConstraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryKeyConstraintAccess().getKeyKeyword_1()); }

	'key' 

{ after(grammarAccess.getPrimaryKeyConstraintAccess().getKeyKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryKeyConstraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryKeyConstraint__Group__2__Impl
	rule__PrimaryKeyConstraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKeyConstraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryKeyConstraintAccess().getNameAssignment_2()); }
(rule__PrimaryKeyConstraint__NameAssignment_2)
{ after(grammarAccess.getPrimaryKeyConstraintAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryKeyConstraint__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryKeyConstraint__Group__3__Impl
	rule__PrimaryKeyConstraint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKeyConstraint__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryKeyConstraintAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getPrimaryKeyConstraintAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryKeyConstraint__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryKeyConstraint__Group__4__Impl
	rule__PrimaryKeyConstraint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKeyConstraint__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryKeyConstraintAccess().getTupleSelectorAssignment_4()); }
(rule__PrimaryKeyConstraint__TupleSelectorAssignment_4)
{ after(grammarAccess.getPrimaryKeyConstraintAccess().getTupleSelectorAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryKeyConstraint__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryKeyConstraint__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKeyConstraint__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryKeyConstraintAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getPrimaryKeyConstraintAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ForeignKeyConstraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeignKeyConstraint__Group__0__Impl
	rule__ForeignKeyConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKeyConstraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeignKeyConstraintAccess().getForeignKeyword_0()); }

	'foreign' 

{ after(grammarAccess.getForeignKeyConstraintAccess().getForeignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeignKeyConstraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeignKeyConstraint__Group__1__Impl
	rule__ForeignKeyConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKeyConstraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeignKeyConstraintAccess().getKeyKeyword_1()); }

	'key' 

{ after(grammarAccess.getForeignKeyConstraintAccess().getKeyKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeignKeyConstraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeignKeyConstraint__Group__2__Impl
	rule__ForeignKeyConstraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKeyConstraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeignKeyConstraintAccess().getTupleSelectorAssignment_2()); }
(rule__ForeignKeyConstraint__TupleSelectorAssignment_2)
{ after(grammarAccess.getForeignKeyConstraintAccess().getTupleSelectorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeignKeyConstraint__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeignKeyConstraint__Group__3__Impl
	rule__ForeignKeyConstraint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKeyConstraint__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeignKeyConstraintAccess().getReferencesKeyword_3()); }

	'references' 

{ after(grammarAccess.getForeignKeyConstraintAccess().getReferencesKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeignKeyConstraint__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeignKeyConstraint__Group__4__Impl
	rule__ForeignKeyConstraint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKeyConstraint__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeignKeyConstraintAccess().getReferencedRelationAssignment_4()); }
(rule__ForeignKeyConstraint__ReferencedRelationAssignment_4)
{ after(grammarAccess.getForeignKeyConstraintAccess().getReferencedRelationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeignKeyConstraint__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeignKeyConstraint__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKeyConstraint__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeignKeyConstraintAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getForeignKeyConstraintAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TupleSelector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleSelector__Group__0__Impl
	rule__TupleSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleSelector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleSelectorAccess().getRegionAssignment_0()); }
(rule__TupleSelector__RegionAssignment_0)
{ after(grammarAccess.getTupleSelectorAccess().getRegionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TupleSelector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleSelector__Group__1__Impl
	rule__TupleSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleSelector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleSelectorAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getTupleSelectorAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TupleSelector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleSelector__Group__2__Impl
	rule__TupleSelector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleSelector__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleSelectorAccess().getSelectorsAssignment_2()); }
(rule__TupleSelector__SelectorsAssignment_2)
{ after(grammarAccess.getTupleSelectorAccess().getSelectorsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TupleSelector__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleSelector__Group__3__Impl
	rule__TupleSelector__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleSelector__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleSelectorAccess().getGroup_3()); }
(rule__TupleSelector__Group_3__0)*
{ after(grammarAccess.getTupleSelectorAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TupleSelector__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleSelector__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleSelector__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleSelectorAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getTupleSelectorAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TupleSelector__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleSelector__Group_3__0__Impl
	rule__TupleSelector__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleSelector__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleSelectorAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getTupleSelectorAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TupleSelector__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleSelector__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleSelector__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleSelectorAccess().getSelectorsAssignment_3_1()); }
(rule__TupleSelector__SelectorsAssignment_3_1)
{ after(grammarAccess.getTupleSelectorAccess().getSelectorsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TransformationProgram__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationProgram__Group__0__Impl
	rule__TransformationProgram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationProgram__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationProgramAccess().getDelimiterAssignment_0()); }
(rule__TransformationProgram__DelimiterAssignment_0)?
{ after(grammarAccess.getTransformationProgramAccess().getDelimiterAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationProgram__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationProgram__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationProgram__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTransformationProgramAccess().getStatementsAssignment_1()); }
(rule__TransformationProgram__StatementsAssignment_1)
{ after(grammarAccess.getTransformationProgramAccess().getStatementsAssignment_1()); }
)
(
{ before(grammarAccess.getTransformationProgramAccess().getStatementsAssignment_1()); }
(rule__TransformationProgram__StatementsAssignment_1)*
{ after(grammarAccess.getTransformationProgramAccess().getStatementsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ne_Or__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Or__Group__0__Impl
	rule__Ne_Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Or__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_OrAccess().getNe_AndParserRuleCall_0()); }
	ruleNe_And
{ after(grammarAccess.getNe_OrAccess().getNe_AndParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Or__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Or__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_OrAccess().getGroup_1()); }
(rule__Ne_Or__Group_1__0)*
{ after(grammarAccess.getNe_OrAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ne_Or__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Or__Group_1__0__Impl
	rule__Ne_Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Or__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_OrAccess().getNodeExpressionOrLeftAction_1_0()); }
(

)
{ after(grammarAccess.getNe_OrAccess().getNodeExpressionOrLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Or__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Or__Group_1__1__Impl
	rule__Ne_Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Or__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_OrAccess().getOrKeyword_1_1()); }

	'or' 

{ after(grammarAccess.getNe_OrAccess().getOrKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Or__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Or__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_OrAccess().getRightAssignment_1_2()); }
(rule__Ne_Or__RightAssignment_1_2)
{ after(grammarAccess.getNe_OrAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Ne_And__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_And__Group__0__Impl
	rule__Ne_And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_And__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AndAccess().getNe_NotParserRuleCall_0()); }
	ruleNe_Not
{ after(grammarAccess.getNe_AndAccess().getNe_NotParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_And__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_And__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AndAccess().getGroup_1()); }
(rule__Ne_And__Group_1__0)*
{ after(grammarAccess.getNe_AndAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ne_And__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_And__Group_1__0__Impl
	rule__Ne_And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_And__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AndAccess().getNodeExpressionAndLeftAction_1_0()); }
(

)
{ after(grammarAccess.getNe_AndAccess().getNodeExpressionAndLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_And__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_And__Group_1__1__Impl
	rule__Ne_And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_And__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AndAccess().getAndKeyword_1_1()); }

	'and' 

{ after(grammarAccess.getNe_AndAccess().getAndKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_And__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_And__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AndAccess().getRightAssignment_1_2()); }
(rule__Ne_And__RightAssignment_1_2)
{ after(grammarAccess.getNe_AndAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Ne_Not__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Not__Group_0__0__Impl
	rule__Ne_Not__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Not__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_NotAccess().getNodeExpressionNotAction_0_0()); }
(

)
{ after(grammarAccess.getNe_NotAccess().getNodeExpressionNotAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Not__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Not__Group_0__1__Impl
	rule__Ne_Not__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Not__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_NotAccess().getNotKeyword_0_1()); }

	'not' 

{ after(grammarAccess.getNe_NotAccess().getNotKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Not__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Not__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Not__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_NotAccess().getRegionAssignment_0_2()); }
(rule__Ne_Not__RegionAssignment_0_2)
{ after(grammarAccess.getNe_NotAccess().getRegionAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Ne_Path__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Path__Group_0__0__Impl
	rule__Ne_Path__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Path__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_PathAccess().getNe_PrimitiveParserRuleCall_0_0()); }
(	ruleNe_Primitive)
{ after(grammarAccess.getNe_PathAccess().getNe_PrimitiveParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Path__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Path__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Path__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_PathAccess().getGroup_0_1()); }
(rule__Ne_Path__Group_0_1__0)?
{ after(grammarAccess.getNe_PathAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ne_Path__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Path__Group_0_1__0__Impl
	rule__Ne_Path__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Path__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_PathAccess().getNodeExpressionPathRegionAction_0_1_0()); }
(

)
{ after(grammarAccess.getNe_PathAccess().getNodeExpressionPathRegionAction_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Path__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Path__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Path__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_PathAccess().getGroup_0_1_1()); }
(rule__Ne_Path__Group_0_1_1__0)
{ after(grammarAccess.getNe_PathAccess().getGroup_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ne_Path__Group_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Path__Group_0_1_1__0__Impl
	rule__Ne_Path__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Path__Group_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_PathAccess().getSolidusKeyword_0_1_1_0()); }

	'/' 

{ after(grammarAccess.getNe_PathAccess().getSolidusKeyword_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Path__Group_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Path__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Path__Group_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_PathAccess().getPathAssignment_0_1_1_1()); }
(rule__Ne_Path__PathAssignment_0_1_1_1)
{ after(grammarAccess.getNe_PathAccess().getPathAssignment_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ne_Path__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Path__Group_1__0__Impl
	rule__Ne_Path__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Path__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_PathAccess().getNodeExpressionPathAction_1_0()); }
(

)
{ after(grammarAccess.getNe_PathAccess().getNodeExpressionPathAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Path__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Path__Group_1__1__Impl
	rule__Ne_Path__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Path__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_PathAccess().getSolidusKeyword_1_1()); }

	'/' 

{ after(grammarAccess.getNe_PathAccess().getSolidusKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Path__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Path__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Path__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_PathAccess().getPathAssignment_1_2()); }
(rule__Ne_Path__PathAssignment_1_2)
{ after(grammarAccess.getNe_PathAccess().getPathAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Ne_Path__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Path__Group_2__0__Impl
	rule__Ne_Path__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Path__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_PathAccess().getPathExpressionPredicateAction_2_0()); }
(

)
{ after(grammarAccess.getNe_PathAccess().getPathExpressionPredicateAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Path__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Path__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Path__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_PathAccess().getPathAssignment_2_1()); }
(rule__Ne_Path__PathAssignment_2_1)
{ after(grammarAccess.getNe_PathAccess().getPathAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ne_Primitive__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Primitive__Group_0__0__Impl
	rule__Ne_Primitive__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Primitive__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_PrimitiveAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getNe_PrimitiveAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Primitive__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Primitive__Group_0__1__Impl
	rule__Ne_Primitive__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Primitive__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_PrimitiveAccess().getNe_OrParserRuleCall_0_1()); }
	ruleNe_Or
{ after(grammarAccess.getNe_PrimitiveAccess().getNe_OrParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Primitive__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Primitive__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Primitive__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_PrimitiveAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getNe_PrimitiveAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Ne_Atomic__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_1__0__Impl
	rule__Ne_Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getNodeExpressionRowColCoordinateAction_1_0()); }
(

)
{ after(grammarAccess.getNe_AtomicAccess().getNodeExpressionRowColCoordinateAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_1__1__Impl
	rule__Ne_Atomic__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getModeAssignment_1_1()); }
(rule__Ne_Atomic__ModeAssignment_1_1)
{ after(grammarAccess.getNe_AtomicAccess().getModeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_1__2__Impl
	rule__Ne_Atomic__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getLeftParenthesisKeyword_1_2()); }

	'(' 

{ after(grammarAccess.getNe_AtomicAccess().getLeftParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_1__3__Impl
	rule__Ne_Atomic__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getRowAssignment_1_3()); }
(rule__Ne_Atomic__RowAssignment_1_3)
{ after(grammarAccess.getNe_AtomicAccess().getRowAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_1__4__Impl
	rule__Ne_Atomic__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getCommaKeyword_1_4()); }

	',' 

{ after(grammarAccess.getNe_AtomicAccess().getCommaKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_1__5__Impl
	rule__Ne_Atomic__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getColumnAssignment_1_5()); }
(rule__Ne_Atomic__ColumnAssignment_1_5)
{ after(grammarAccess.getNe_AtomicAccess().getColumnAssignment_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getRightParenthesisKeyword_1_6()); }

	')' 

{ after(grammarAccess.getNe_AtomicAccess().getRightParenthesisKeyword_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Ne_Atomic__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_2__0__Impl
	rule__Ne_Atomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getNodeExpressionRowColCoordinateAction_2_0()); }
(

)
{ after(grammarAccess.getNe_AtomicAccess().getNodeExpressionRowColCoordinateAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_2__1__Impl
	rule__Ne_Atomic__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getModeAssignment_2_1()); }
(rule__Ne_Atomic__ModeAssignment_2_1)
{ after(grammarAccess.getNe_AtomicAccess().getModeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_2__2__Impl
	rule__Ne_Atomic__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getLeftParenthesisKeyword_2_2()); }

	'(' 

{ after(grammarAccess.getNe_AtomicAccess().getLeftParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_2__3__Impl
	rule__Ne_Atomic__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getIndexAssignment_2_3()); }
(rule__Ne_Atomic__IndexAssignment_2_3)
{ after(grammarAccess.getNe_AtomicAccess().getIndexAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getRightParenthesisKeyword_2_4()); }

	')' 

{ after(grammarAccess.getNe_AtomicAccess().getRightParenthesisKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Ne_Atomic__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_3__0__Impl
	rule__Ne_Atomic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getNodeExpressionRowColTokenAction_3_0()); }
(

)
{ after(grammarAccess.getNe_AtomicAccess().getNodeExpressionRowColTokenAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_3__1__Impl
	rule__Ne_Atomic__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getModeAssignment_3_1()); }
(rule__Ne_Atomic__ModeAssignment_3_1)
{ after(grammarAccess.getNe_AtomicAccess().getModeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_3__2__Impl
	rule__Ne_Atomic__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getLeftParenthesisKeyword_3_2()); }

	'(' 

{ after(grammarAccess.getNe_AtomicAccess().getLeftParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_3__3__Impl
	rule__Ne_Atomic__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getTokenAssignment_3_3()); }
(rule__Ne_Atomic__TokenAssignment_3_3)
{ after(grammarAccess.getNe_AtomicAccess().getTokenAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getRightParenthesisKeyword_3_4()); }

	')' 

{ after(grammarAccess.getNe_AtomicAccess().getRightParenthesisKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Ne_Atomic__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_4__0__Impl
	rule__Ne_Atomic__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getNodeExpressionRowColStringAction_4_0()); }
(

)
{ after(grammarAccess.getNe_AtomicAccess().getNodeExpressionRowColStringAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_4__1__Impl
	rule__Ne_Atomic__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getModeAssignment_4_1()); }
(rule__Ne_Atomic__ModeAssignment_4_1)
{ after(grammarAccess.getNe_AtomicAccess().getModeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_4__2__Impl
	rule__Ne_Atomic__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getLeftParenthesisKeyword_4_2()); }

	'(' 

{ after(grammarAccess.getNe_AtomicAccess().getLeftParenthesisKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_4__3__Impl
	rule__Ne_Atomic__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getStringAssignment_4_3()); }
(rule__Ne_Atomic__StringAssignment_4_3)
{ after(grammarAccess.getNe_AtomicAccess().getStringAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getRightParenthesisKeyword_4_4()); }

	')' 

{ after(grammarAccess.getNe_AtomicAccess().getRightParenthesisKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Ne_Atomic__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_5__0__Impl
	rule__Ne_Atomic__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getNodeExpressionRowColLastAction_5_0()); }
(

)
{ after(grammarAccess.getNe_AtomicAccess().getNodeExpressionRowColLastAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_5__1__Impl
	rule__Ne_Atomic__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getModeAssignment_5_1()); }
(rule__Ne_Atomic__ModeAssignment_5_1)
{ after(grammarAccess.getNe_AtomicAccess().getModeAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_5__2__Impl
	rule__Ne_Atomic__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getLeftParenthesisKeyword_5_2()); }

	'(' 

{ after(grammarAccess.getNe_AtomicAccess().getLeftParenthesisKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_5__3__Impl
	rule__Ne_Atomic__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getLastKeyword_5_3()); }

	'last' 

{ after(grammarAccess.getNe_AtomicAccess().getLastKeyword_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getRightParenthesisKeyword_5_4()); }

	')' 

{ after(grammarAccess.getNe_AtomicAccess().getRightParenthesisKeyword_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Ne_Atomic__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_6__0__Impl
	rule__Ne_Atomic__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getNodeExpressionCompleteAction_6_0()); }
(

)
{ after(grammarAccess.getNe_AtomicAccess().getNodeExpressionCompleteAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getTrueKeyword_6_1()); }

	'True' 

{ after(grammarAccess.getNe_AtomicAccess().getTrueKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ne_Comparison__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Comparison__Group_0__0__Impl
	rule__Ne_Comparison__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Comparison__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_ComparisonAccess().getTypeAssignment_0_0()); }
(rule__Ne_Comparison__TypeAssignment_0_0)
{ after(grammarAccess.getNe_ComparisonAccess().getTypeAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Comparison__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Comparison__Group_0__1__Impl
	rule__Ne_Comparison__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Comparison__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_ComparisonAccess().getTypeSpecifierAssignment_0_1()); }
(rule__Ne_Comparison__TypeSpecifierAssignment_0_1)*
{ after(grammarAccess.getNe_ComparisonAccess().getTypeSpecifierAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Comparison__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Comparison__Group_0__2__Impl
	rule__Ne_Comparison__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Comparison__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_ComparisonAccess().getCompAssignment_0_2()); }
(rule__Ne_Comparison__CompAssignment_0_2)
{ after(grammarAccess.getNe_ComparisonAccess().getCompAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Comparison__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Comparison__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Comparison__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_ComparisonAccess().getValueAssignment_0_3()); }
(rule__Ne_Comparison__ValueAssignment_0_3)
{ after(grammarAccess.getNe_ComparisonAccess().getValueAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Ne_Comparison__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Comparison__Group_1__0__Impl
	rule__Ne_Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Comparison__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_ComparisonAccess().getNodeExpressionComparisonR2LAction_1_0()); }
(

)
{ after(grammarAccess.getNe_ComparisonAccess().getNodeExpressionComparisonR2LAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Comparison__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Comparison__Group_1__1__Impl
	rule__Ne_Comparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Comparison__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_ComparisonAccess().getValueAssignment_1_1()); }
(rule__Ne_Comparison__ValueAssignment_1_1)
{ after(grammarAccess.getNe_ComparisonAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Comparison__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Comparison__Group_1__2__Impl
	rule__Ne_Comparison__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Comparison__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_ComparisonAccess().getCompAssignment_1_2()); }
(rule__Ne_Comparison__CompAssignment_1_2)
{ after(grammarAccess.getNe_ComparisonAccess().getCompAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Comparison__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Comparison__Group_1__3__Impl
	rule__Ne_Comparison__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Comparison__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_ComparisonAccess().getTypeAssignment_1_3()); }
(rule__Ne_Comparison__TypeAssignment_1_3)
{ after(grammarAccess.getNe_ComparisonAccess().getTypeAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Comparison__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Comparison__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Comparison__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_ComparisonAccess().getTypeSpecifierAssignment_1_4()); }
(rule__Ne_Comparison__TypeSpecifierAssignment_1_4)*
{ after(grammarAccess.getNe_ComparisonAccess().getTypeSpecifierAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TypeSpecifier__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_0__0__Impl
	rule__TypeSpecifier__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getCompoundTypeSpecifierAction_0_0()); }
(

)
{ after(grammarAccess.getTypeSpecifierAccess().getCompoundTypeSpecifierAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_0__1__Impl
	rule__TypeSpecifier__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getFullStopKeyword_0_1()); }

	'.' 

{ after(grammarAccess.getTypeSpecifierAccess().getFullStopKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_0__2__Impl
	rule__TypeSpecifier__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getSubtypeAssignment_0_2()); }
(rule__TypeSpecifier__SubtypeAssignment_0_2)
{ after(grammarAccess.getTypeSpecifierAccess().getSubtypeAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getGroup_0_3()); }
(rule__TypeSpecifier__Group_0_3__0)?
{ after(grammarAccess.getTypeSpecifierAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypeSpecifier__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_0_3__0__Impl
	rule__TypeSpecifier__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getLessThanSignKeyword_0_3_0()); }

	'<' 

{ after(grammarAccess.getTypeSpecifierAccess().getLessThanSignKeyword_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_0_3__1__Impl
	rule__TypeSpecifier__Group_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getIndexAssignment_0_3_1()); }
(rule__TypeSpecifier__IndexAssignment_0_3_1)
{ after(grammarAccess.getTypeSpecifierAccess().getIndexAssignment_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_0_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_0_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_0_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getGreaterThanSignKeyword_0_3_2()); }

	'>' 

{ after(grammarAccess.getTypeSpecifierAccess().getGreaterThanSignKeyword_0_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypeSpecifier__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_1__0__Impl
	rule__TypeSpecifier__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getListTypeSpecifierAction_1_0()); }
(

)
{ after(grammarAccess.getTypeSpecifierAccess().getListTypeSpecifierAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_1__1__Impl
	rule__TypeSpecifier__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getLeftSquareBracketKeyword_1_1()); }

	'[' 

{ after(grammarAccess.getTypeSpecifierAccess().getLeftSquareBracketKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_1__2__Impl
	rule__TypeSpecifier__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getIndexAssignment_1_2()); }
(rule__TypeSpecifier__IndexAssignment_1_2)
{ after(grammarAccess.getTypeSpecifierAccess().getIndexAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpecifier__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSpecifier__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getRightSquareBracketKeyword_1_3()); }

	']' 

{ after(grammarAccess.getTypeSpecifierAccess().getRightSquareBracketKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Ne_Atomic_Node_Test__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic_Node_Test__Group_0__0__Impl
	rule__Ne_Atomic_Node_Test__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic_Node_Test__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_Atomic_Node_TestAccess().getNodeExpressionCoordinateAction_0_0()); }
(

)
{ after(grammarAccess.getNe_Atomic_Node_TestAccess().getNodeExpressionCoordinateAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic_Node_Test__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic_Node_Test__Group_0__1__Impl
	rule__Ne_Atomic_Node_Test__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic_Node_Test__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_Atomic_Node_TestAccess().getLeftParenthesisKeyword_0_1()); }

	'(' 

{ after(grammarAccess.getNe_Atomic_Node_TestAccess().getLeftParenthesisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic_Node_Test__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic_Node_Test__Group_0__2__Impl
	rule__Ne_Atomic_Node_Test__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic_Node_Test__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_Atomic_Node_TestAccess().getRowAssignment_0_2()); }
(rule__Ne_Atomic_Node_Test__RowAssignment_0_2)
{ after(grammarAccess.getNe_Atomic_Node_TestAccess().getRowAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic_Node_Test__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic_Node_Test__Group_0__3__Impl
	rule__Ne_Atomic_Node_Test__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic_Node_Test__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_Atomic_Node_TestAccess().getCommaKeyword_0_3()); }

	',' 

{ after(grammarAccess.getNe_Atomic_Node_TestAccess().getCommaKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic_Node_Test__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic_Node_Test__Group_0__4__Impl
	rule__Ne_Atomic_Node_Test__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic_Node_Test__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_Atomic_Node_TestAccess().getColumnAssignment_0_4()); }
(rule__Ne_Atomic_Node_Test__ColumnAssignment_0_4)
{ after(grammarAccess.getNe_Atomic_Node_TestAccess().getColumnAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic_Node_Test__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic_Node_Test__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic_Node_Test__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_Atomic_Node_TestAccess().getRightParenthesisKeyword_0_5()); }

	')' 

{ after(grammarAccess.getNe_Atomic_Node_TestAccess().getRightParenthesisKeyword_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Ne_Atomic_Node_Test__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic_Node_Test__Group_1__0__Impl
	rule__Ne_Atomic_Node_Test__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic_Node_Test__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_Atomic_Node_TestAccess().getNodeExpressionTokenAction_1_0()); }
(

)
{ after(grammarAccess.getNe_Atomic_Node_TestAccess().getNodeExpressionTokenAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ne_Atomic_Node_Test__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ne_Atomic_Node_Test__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic_Node_Test__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_Atomic_Node_TestAccess().getTokenAssignment_1_1()); }
(rule__Ne_Atomic_Node_Test__TokenAssignment_1_1)
{ after(grammarAccess.getNe_Atomic_Node_TestAccess().getTokenAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Path_Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Path_Expression__Group__0__Impl
	rule__Path_Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path_Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPath_ExpressionAccess().getPe_RegexParserRuleCall_0()); }
	rulePe_Regex
{ after(grammarAccess.getPath_ExpressionAccess().getPe_RegexParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Path_Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Path_Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path_Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPath_ExpressionAccess().getGroup_1()); }
(rule__Path_Expression__Group_1__0)?
{ after(grammarAccess.getPath_ExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Path_Expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Path_Expression__Group_1__0__Impl
	rule__Path_Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path_Expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPath_ExpressionAccess().getPathExpressionListFirstAction_1_0()); }
(

)
{ after(grammarAccess.getPath_ExpressionAccess().getPathExpressionListFirstAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Path_Expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Path_Expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path_Expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPath_ExpressionAccess().getGroup_1_1()); }
(rule__Path_Expression__Group_1_1__0)
{ after(grammarAccess.getPath_ExpressionAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getPath_ExpressionAccess().getGroup_1_1()); }
(rule__Path_Expression__Group_1_1__0)*
{ after(grammarAccess.getPath_ExpressionAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Path_Expression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Path_Expression__Group_1_1__0__Impl
	rule__Path_Expression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path_Expression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPath_ExpressionAccess().getSolidusKeyword_1_1_0()); }

	'/' 

{ after(grammarAccess.getPath_ExpressionAccess().getSolidusKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Path_Expression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Path_Expression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path_Expression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPath_ExpressionAccess().getRestAssignment_1_1_1()); }
(rule__Path_Expression__RestAssignment_1_1_1)
{ after(grammarAccess.getPath_ExpressionAccess().getRestAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pe_Regex__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Regex__Group__0__Impl
	rule__Pe_Regex__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Regex__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_RegexAccess().getPe_PrimitiveParserRuleCall_0()); }
	rulePe_Primitive
{ after(grammarAccess.getPe_RegexAccess().getPe_PrimitiveParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pe_Regex__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Regex__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Regex__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_RegexAccess().getAlternatives_1()); }
(rule__Pe_Regex__Alternatives_1)?
{ after(grammarAccess.getPe_RegexAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pe_Regex__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Regex__Group_1_0__0__Impl
	rule__Pe_Regex__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Regex__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_RegexAccess().getPathExpressionStarElementAction_1_0_0()); }
(

)
{ after(grammarAccess.getPe_RegexAccess().getPathExpressionStarElementAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pe_Regex__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Regex__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Regex__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_RegexAccess().getAsteriskKeyword_1_0_1()); }

	'*' 

{ after(grammarAccess.getPe_RegexAccess().getAsteriskKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pe_Regex__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Regex__Group_1_1__0__Impl
	rule__Pe_Regex__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Regex__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_RegexAccess().getPathExpressionPlusElementAction_1_1_0()); }
(

)
{ after(grammarAccess.getPe_RegexAccess().getPathExpressionPlusElementAction_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pe_Regex__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Regex__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Regex__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_RegexAccess().getPlusSignKeyword_1_1_1()); }

	'+' 

{ after(grammarAccess.getPe_RegexAccess().getPlusSignKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pe_Regex__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Regex__Group_1_2__0__Impl
	rule__Pe_Regex__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Regex__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_RegexAccess().getPathExpressionOptionElementAction_1_2_0()); }
(

)
{ after(grammarAccess.getPe_RegexAccess().getPathExpressionOptionElementAction_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pe_Regex__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Regex__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Regex__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_RegexAccess().getQuestionMarkKeyword_1_2_1()); }

	'?' 

{ after(grammarAccess.getPe_RegexAccess().getQuestionMarkKeyword_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pe_Primitive__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Primitive__Group_0__0__Impl
	rule__Pe_Primitive__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Primitive__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_PrimitiveAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getPe_PrimitiveAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pe_Primitive__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Primitive__Group_0__1__Impl
	rule__Pe_Primitive__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Primitive__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_PrimitiveAccess().getPe_OrParserRuleCall_0_1()); }
	rulePe_Or
{ after(grammarAccess.getPe_PrimitiveAccess().getPe_OrParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pe_Primitive__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Primitive__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Primitive__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_PrimitiveAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getPe_PrimitiveAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Pe_Or__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Or__Group__0__Impl
	rule__Pe_Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Or__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_OrAccess().getPath_ExpressionParserRuleCall_0()); }
	rulePath_Expression
{ after(grammarAccess.getPe_OrAccess().getPath_ExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pe_Or__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Or__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_OrAccess().getGroup_1()); }
(rule__Pe_Or__Group_1__0)*
{ after(grammarAccess.getPe_OrAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pe_Or__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Or__Group_1__0__Impl
	rule__Pe_Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Or__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_OrAccess().getPathExpressionOrLeftAction_1_0()); }
(

)
{ after(grammarAccess.getPe_OrAccess().getPathExpressionOrLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pe_Or__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Or__Group_1__1__Impl
	rule__Pe_Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Or__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_OrAccess().getVerticalLineKeyword_1_1()); }

	'|' 

{ after(grammarAccess.getPe_OrAccess().getVerticalLineKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pe_Or__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Or__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_OrAccess().getRightAssignment_1_2()); }
(rule__Pe_Or__RightAssignment_1_2)
{ after(grammarAccess.getPe_OrAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Pe_Atomic__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Atomic__Group__0__Impl
	rule__Pe_Atomic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Atomic__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_AtomicAccess().getPathExpressionStepAction_0()); }
(

)
{ after(grammarAccess.getPe_AtomicAccess().getPathExpressionStepAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pe_Atomic__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Atomic__Group__1__Impl
	rule__Pe_Atomic__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Atomic__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_AtomicAccess().getAxesAssignment_1()); }
(rule__Pe_Atomic__AxesAssignment_1)
{ after(grammarAccess.getPe_AtomicAccess().getAxesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pe_Atomic__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Atomic__Group__2__Impl
	rule__Pe_Atomic__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Atomic__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_AtomicAccess().getAlternatives_2()); }
(rule__Pe_Atomic__Alternatives_2)?
{ after(grammarAccess.getPe_AtomicAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pe_Atomic__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Atomic__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Atomic__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_AtomicAccess().getGroup_3()); }
(rule__Pe_Atomic__Group_3__0)?
{ after(grammarAccess.getPe_AtomicAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Pe_Atomic__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Atomic__Group_2_0__0__Impl
	rule__Pe_Atomic__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Atomic__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_AtomicAccess().getColonColonKeyword_2_0_0()); }

	'::' 

{ after(grammarAccess.getPe_AtomicAccess().getColonColonKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pe_Atomic__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Atomic__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Atomic__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_AtomicAccess().getNode_testAssignment_2_0_1()); }
(rule__Pe_Atomic__Node_testAssignment_2_0_1)
{ after(grammarAccess.getPe_AtomicAccess().getNode_testAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pe_Atomic__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Atomic__Group_3__0__Impl
	rule__Pe_Atomic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Atomic__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_AtomicAccess().getLeftSquareBracketKeyword_3_0()); }

	'[' 

{ after(grammarAccess.getPe_AtomicAccess().getLeftSquareBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pe_Atomic__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Atomic__Group_3__1__Impl
	rule__Pe_Atomic__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Atomic__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_AtomicAccess().getPredicateAssignment_3_1()); }
(rule__Pe_Atomic__PredicateAssignment_3_1)
{ after(grammarAccess.getPe_AtomicAccess().getPredicateAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pe_Atomic__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pe_Atomic__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Atomic__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_AtomicAccess().getRightSquareBracketKeyword_3_2()); }

	']' 

{ after(grammarAccess.getPe_AtomicAccess().getRightSquareBracketKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Ce_Or__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Or__Group__0__Impl
	rule__Ce_Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Or__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_OrAccess().getCe_ListParserRuleCall_0()); }
	ruleCe_List
{ after(grammarAccess.getCe_OrAccess().getCe_ListParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Or__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Or__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_OrAccess().getGroup_1()); }
(rule__Ce_Or__Group_1__0)*
{ after(grammarAccess.getCe_OrAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ce_Or__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Or__Group_1__0__Impl
	rule__Ce_Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Or__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_OrAccess().getContentExpressionOrLeftAction_1_0()); }
(

)
{ after(grammarAccess.getCe_OrAccess().getContentExpressionOrLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Or__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Or__Group_1__1__Impl
	rule__Ce_Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Or__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_OrAccess().getVerticalLineKeyword_1_1()); }

	'|' 

{ after(grammarAccess.getCe_OrAccess().getVerticalLineKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Or__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Or__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_OrAccess().getRightAssignment_1_2()); }
(rule__Ce_Or__RightAssignment_1_2)
{ after(grammarAccess.getCe_OrAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Ce_List__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_List__Group__0__Impl
	rule__Ce_List__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_List__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ListAccess().getCe_RecursiveParserRuleCall_0()); }
	ruleCe_Recursive
{ after(grammarAccess.getCe_ListAccess().getCe_RecursiveParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_List__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_List__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_List__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ListAccess().getGroup_1()); }
(rule__Ce_List__Group_1__0)*
{ after(grammarAccess.getCe_ListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ce_List__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_List__Group_1__0__Impl
	rule__Ce_List__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_List__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ListAccess().getContentExpressionListFirstAction_1_0()); }
(

)
{ after(grammarAccess.getCe_ListAccess().getContentExpressionListFirstAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_List__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_List__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_List__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ListAccess().getRestAssignment_1_1()); }
(rule__Ce_List__RestAssignment_1_1)
{ after(grammarAccess.getCe_ListAccess().getRestAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ce_Recursive__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Recursive__Group__0__Impl
	rule__Ce_Recursive__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Recursive__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_RecursiveAccess().getCe_PrimitiveParserRuleCall_0()); }
	ruleCe_Primitive
{ after(grammarAccess.getCe_RecursiveAccess().getCe_PrimitiveParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Recursive__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Recursive__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Recursive__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_RecursiveAccess().getAlternatives_1()); }
(rule__Ce_Recursive__Alternatives_1)?
{ after(grammarAccess.getCe_RecursiveAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ce_Recursive__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Recursive__Group_1_0__0__Impl
	rule__Ce_Recursive__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Recursive__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_RecursiveAccess().getContentExpressionStarElementAction_1_0_0()); }
(

)
{ after(grammarAccess.getCe_RecursiveAccess().getContentExpressionStarElementAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Recursive__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Recursive__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Recursive__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_RecursiveAccess().getAsteriskKeyword_1_0_1()); }

	'*' 

{ after(grammarAccess.getCe_RecursiveAccess().getAsteriskKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ce_Recursive__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Recursive__Group_1_1__0__Impl
	rule__Ce_Recursive__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Recursive__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_RecursiveAccess().getContentExpressionPlusElementAction_1_1_0()); }
(

)
{ after(grammarAccess.getCe_RecursiveAccess().getContentExpressionPlusElementAction_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Recursive__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Recursive__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Recursive__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_RecursiveAccess().getPlusSignKeyword_1_1_1()); }

	'+' 

{ after(grammarAccess.getCe_RecursiveAccess().getPlusSignKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ce_Recursive__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Recursive__Group_1_2__0__Impl
	rule__Ce_Recursive__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Recursive__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_RecursiveAccess().getContentExpressionOptionElementAction_1_2_0()); }
(

)
{ after(grammarAccess.getCe_RecursiveAccess().getContentExpressionOptionElementAction_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Recursive__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Recursive__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Recursive__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_RecursiveAccess().getQuestionMarkKeyword_1_2_1()); }

	'?' 

{ after(grammarAccess.getCe_RecursiveAccess().getQuestionMarkKeyword_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ce_Primitive__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Primitive__Group_0__0__Impl
	rule__Ce_Primitive__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Primitive__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_PrimitiveAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getCe_PrimitiveAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Primitive__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Primitive__Group_0__1__Impl
	rule__Ce_Primitive__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Primitive__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_PrimitiveAccess().getContentExpressionParserRuleCall_0_1()); }
	ruleContentExpression
{ after(grammarAccess.getCe_PrimitiveAccess().getContentExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Primitive__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Primitive__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Primitive__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_PrimitiveAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getCe_PrimitiveAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Ce_Atomic__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Atomic__Group_0__0__Impl
	rule__Ce_Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Atomic__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_AtomicAccess().getContentExpressionTokenAction_0_0()); }
(

)
{ after(grammarAccess.getCe_AtomicAccess().getContentExpressionTokenAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Atomic__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Atomic__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Atomic__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_AtomicAccess().getTokenAssignment_0_1()); }
(rule__Ce_Atomic__TokenAssignment_0_1)
{ after(grammarAccess.getCe_AtomicAccess().getTokenAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ce_Atomic__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Atomic__Group_1__0__Impl
	rule__Ce_Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Atomic__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_AtomicAccess().getContentExpressionStringAction_1_0()); }
(

)
{ after(grammarAccess.getCe_AtomicAccess().getContentExpressionStringAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Atomic__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Atomic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Atomic__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_AtomicAccess().getStringAssignment_1_1()); }
(rule__Ce_Atomic__StringAssignment_1_1)
{ after(grammarAccess.getCe_AtomicAccess().getStringAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ce_Atomic__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Atomic__Group_2__0__Impl
	rule__Ce_Atomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Atomic__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_AtomicAccess().getContentExpressionANYAction_2_0()); }
(

)
{ after(grammarAccess.getCe_AtomicAccess().getContentExpressionANYAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Atomic__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Atomic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Atomic__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_AtomicAccess().getANYKeyword_2_1()); }

	'ANY' 

{ after(grammarAccess.getCe_AtomicAccess().getANYKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ce_Atomic__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Atomic__Group_3__0__Impl
	rule__Ce_Atomic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Atomic__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_AtomicAccess().getContentExpressionEMPTYAction_3_0()); }
(

)
{ after(grammarAccess.getCe_AtomicAccess().getContentExpressionEMPTYAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Atomic__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Atomic__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Atomic__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_AtomicAccess().getEMPTYKeyword_3_1()); }

	'EMPTY' 

{ after(grammarAccess.getCe_AtomicAccess().getEMPTYKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ce_Atomic__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Atomic__Group_4__0__Impl
	rule__Ce_Atomic__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Atomic__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_AtomicAccess().getContentExpressionSOMETHINGAction_4_0()); }
(

)
{ after(grammarAccess.getCe_AtomicAccess().getContentExpressionSOMETHINGAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Atomic__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Atomic__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Atomic__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_AtomicAccess().getSOMETHINGKeyword_4_1()); }

	'SOMETHING' 

{ after(grammarAccess.getCe_AtomicAccess().getSOMETHINGKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ce_Comparison__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Comparison__Group_0__0__Impl
	rule__Ce_Comparison__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getTypeAssignment_0_0()); }
(rule__Ce_Comparison__TypeAssignment_0_0)
{ after(grammarAccess.getCe_ComparisonAccess().getTypeAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Comparison__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Comparison__Group_0__1__Impl
	rule__Ce_Comparison__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getTypeSpecifierAssignment_0_1()); }
(rule__Ce_Comparison__TypeSpecifierAssignment_0_1)*
{ after(grammarAccess.getCe_ComparisonAccess().getTypeSpecifierAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Comparison__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Comparison__Group_0__2__Impl
	rule__Ce_Comparison__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getCompAssignment_0_2()); }
(rule__Ce_Comparison__CompAssignment_0_2)
{ after(grammarAccess.getCe_ComparisonAccess().getCompAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Comparison__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Comparison__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getValueAssignment_0_3()); }
(rule__Ce_Comparison__ValueAssignment_0_3)
{ after(grammarAccess.getCe_ComparisonAccess().getValueAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Ce_Comparison__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Comparison__Group_1__0__Impl
	rule__Ce_Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getCe_ComparisonAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Comparison__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Comparison__Group_1__1__Impl
	rule__Ce_Comparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getTypeAssignment_1_1()); }
(rule__Ce_Comparison__TypeAssignment_1_1)
{ after(grammarAccess.getCe_ComparisonAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Comparison__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Comparison__Group_1__2__Impl
	rule__Ce_Comparison__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getTypeSpecifierAssignment_1_2()); }
(rule__Ce_Comparison__TypeSpecifierAssignment_1_2)*
{ after(grammarAccess.getCe_ComparisonAccess().getTypeSpecifierAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Comparison__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Comparison__Group_1__3__Impl
	rule__Ce_Comparison__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getCompAssignment_1_3()); }
(rule__Ce_Comparison__CompAssignment_1_3)
{ after(grammarAccess.getCe_ComparisonAccess().getCompAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Comparison__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Comparison__Group_1__4__Impl
	rule__Ce_Comparison__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getFullStopSolidusKeyword_1_4()); }

	'./' 

{ after(grammarAccess.getCe_ComparisonAccess().getFullStopSolidusKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Comparison__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Comparison__Group_1__5__Impl
	rule__Ce_Comparison__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getPathAssignment_1_5()); }
(rule__Ce_Comparison__PathAssignment_1_5)
{ after(grammarAccess.getCe_ComparisonAccess().getPathAssignment_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Comparison__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Comparison__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getRightParenthesisKeyword_1_6()); }

	')' 

{ after(grammarAccess.getCe_ComparisonAccess().getRightParenthesisKeyword_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Ce_Comparison__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Comparison__Group_2__0__Impl
	rule__Ce_Comparison__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getContentExpressionComparisonR2LAction_2_0()); }
(

)
{ after(grammarAccess.getCe_ComparisonAccess().getContentExpressionComparisonR2LAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Comparison__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Comparison__Group_2__1__Impl
	rule__Ce_Comparison__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getAlternatives_2_1()); }
(rule__Ce_Comparison__Alternatives_2_1)
{ after(grammarAccess.getCe_ComparisonAccess().getAlternatives_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Comparison__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Comparison__Group_2__2__Impl
	rule__Ce_Comparison__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getCompAssignment_2_2()); }
(rule__Ce_Comparison__CompAssignment_2_2)
{ after(grammarAccess.getCe_ComparisonAccess().getCompAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Comparison__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Comparison__Group_2__3__Impl
	rule__Ce_Comparison__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getTypeAssignment_2_3()); }
(rule__Ce_Comparison__TypeAssignment_2_3)
{ after(grammarAccess.getCe_ComparisonAccess().getTypeAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Comparison__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Comparison__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getTypeSpecifierAssignment_2_4()); }
(rule__Ce_Comparison__TypeSpecifierAssignment_2_4)*
{ after(grammarAccess.getCe_ComparisonAccess().getTypeSpecifierAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Ce_Comparison__Group_2_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Comparison__Group_2_1_0__0__Impl
	rule__Ce_Comparison__Group_2_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__Group_2_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getFullStopSolidusKeyword_2_1_0_0()); }

	'./' 

{ after(grammarAccess.getCe_ComparisonAccess().getFullStopSolidusKeyword_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ce_Comparison__Group_2_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ce_Comparison__Group_2_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__Group_2_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getPathAssignment_2_1_0_1()); }
(rule__Ce_Comparison__PathAssignment_2_1_0_1)
{ after(grammarAccess.getCe_ComparisonAccess().getPathAssignment_2_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TLOutputPrimitive__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLOutputPrimitive__Group_0__0__Impl
	rule__TLOutputPrimitive__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TLOutputPrimitive__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLOutputPrimitiveAccess().getTLOutputConstantAction_0_0()); }
(

)
{ after(grammarAccess.getTLOutputPrimitiveAccess().getTLOutputConstantAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLOutputPrimitive__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLOutputPrimitive__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TLOutputPrimitive__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLOutputPrimitiveAccess().getTextAssignment_0_1()); }
(rule__TLOutputPrimitive__TextAssignment_0_1)
{ after(grammarAccess.getTLOutputPrimitiveAccess().getTextAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TLOutputPrimitive__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLOutputPrimitive__Group_1__0__Impl
	rule__TLOutputPrimitive__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TLOutputPrimitive__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLOutputPrimitiveAccess().getTLOutputVariableAction_1_0()); }
(

)
{ after(grammarAccess.getTLOutputPrimitiveAccess().getTLOutputVariableAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLOutputPrimitive__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLOutputPrimitive__Group_1__1__Impl
	rule__TLOutputPrimitive__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TLOutputPrimitive__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLOutputPrimitiveAccess().getVariableAssignment_1_1()); }
(rule__TLOutputPrimitive__VariableAssignment_1_1)
{ after(grammarAccess.getTLOutputPrimitiveAccess().getVariableAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLOutputPrimitive__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLOutputPrimitive__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TLOutputPrimitive__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLOutputPrimitiveAccess().getTypeSpecifierAssignment_1_2()); }
(rule__TLOutputPrimitive__TypeSpecifierAssignment_1_2)*
{ after(grammarAccess.getTLOutputPrimitiveAccess().getTypeSpecifierAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TL_Ce_List__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_List__Group__0__Impl
	rule__TL_Ce_List__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_List__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_ListAccess().getTLContentExpressionListAction_0()); }
(

)
{ after(grammarAccess.getTL_Ce_ListAccess().getTLContentExpressionListAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TL_Ce_List__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_List__Group__1__Impl
	rule__TL_Ce_List__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_List__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_ListAccess().getListAssignment_1()); }
(rule__TL_Ce_List__ListAssignment_1)
{ after(grammarAccess.getTL_Ce_ListAccess().getListAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TL_Ce_List__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_List__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_List__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_ListAccess().getGroup_2()); }
(rule__TL_Ce_List__Group_2__0)*
{ after(grammarAccess.getTL_Ce_ListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TL_Ce_List__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_List__Group_2__0__Impl
	rule__TL_Ce_List__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_List__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_ListAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getTL_Ce_ListAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TL_Ce_List__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_List__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_List__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_ListAccess().getListAssignment_2_1()); }
(rule__TL_Ce_List__ListAssignment_2_1)
{ after(grammarAccess.getTL_Ce_ListAccess().getListAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TL_Ce_Recursive__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_Recursive__Group__0__Impl
	rule__TL_Ce_Recursive__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Recursive__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_RecursiveAccess().getTL_Ce_AtomicParserRuleCall_0()); }
	ruleTL_Ce_Atomic
{ after(grammarAccess.getTL_Ce_RecursiveAccess().getTL_Ce_AtomicParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TL_Ce_Recursive__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_Recursive__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Recursive__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_RecursiveAccess().getAlternatives_1()); }
(rule__TL_Ce_Recursive__Alternatives_1)?
{ after(grammarAccess.getTL_Ce_RecursiveAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TL_Ce_Recursive__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_Recursive__Group_1_0__0__Impl
	rule__TL_Ce_Recursive__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Recursive__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_RecursiveAccess().getContentExpressionStarElementAction_1_0_0()); }
(

)
{ after(grammarAccess.getTL_Ce_RecursiveAccess().getContentExpressionStarElementAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TL_Ce_Recursive__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_Recursive__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Recursive__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_RecursiveAccess().getAsteriskKeyword_1_0_1()); }

	'*' 

{ after(grammarAccess.getTL_Ce_RecursiveAccess().getAsteriskKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TL_Ce_Recursive__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_Recursive__Group_1_1__0__Impl
	rule__TL_Ce_Recursive__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Recursive__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_RecursiveAccess().getContentExpressionPlusElementAction_1_1_0()); }
(

)
{ after(grammarAccess.getTL_Ce_RecursiveAccess().getContentExpressionPlusElementAction_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TL_Ce_Recursive__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_Recursive__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Recursive__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_RecursiveAccess().getPlusSignKeyword_1_1_1()); }

	'+' 

{ after(grammarAccess.getTL_Ce_RecursiveAccess().getPlusSignKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TL_Ce_Recursive__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_Recursive__Group_1_2__0__Impl
	rule__TL_Ce_Recursive__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Recursive__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_RecursiveAccess().getContentExpressionOptionElementAction_1_2_0()); }
(

)
{ after(grammarAccess.getTL_Ce_RecursiveAccess().getContentExpressionOptionElementAction_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TL_Ce_Recursive__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_Recursive__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Recursive__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_RecursiveAccess().getQuestionMarkKeyword_1_2_1()); }

	'?' 

{ after(grammarAccess.getTL_Ce_RecursiveAccess().getQuestionMarkKeyword_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TL_Ce_Atomic__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_Atomic__Group_0__0__Impl
	rule__TL_Ce_Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Atomic__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_AtomicAccess().getContentExpressionTokenAction_0_0()); }
(

)
{ after(grammarAccess.getTL_Ce_AtomicAccess().getContentExpressionTokenAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TL_Ce_Atomic__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_Atomic__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Atomic__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_AtomicAccess().getTokenAssignment_0_1()); }
(rule__TL_Ce_Atomic__TokenAssignment_0_1)
{ after(grammarAccess.getTL_Ce_AtomicAccess().getTokenAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TL_Ce_Atomic__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_Atomic__Group_1__0__Impl
	rule__TL_Ce_Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Atomic__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_AtomicAccess().getContentExpressionStringAction_1_0()); }
(

)
{ after(grammarAccess.getTL_Ce_AtomicAccess().getContentExpressionStringAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TL_Ce_Atomic__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_Atomic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Atomic__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_AtomicAccess().getStringAssignment_1_1()); }
(rule__TL_Ce_Atomic__StringAssignment_1_1)
{ after(grammarAccess.getTL_Ce_AtomicAccess().getStringAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TL_Ce_Atomic__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_Atomic__Group_2__0__Impl
	rule__TL_Ce_Atomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Atomic__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_AtomicAccess().getContentExpressionANYAction_2_0()); }
(

)
{ after(grammarAccess.getTL_Ce_AtomicAccess().getContentExpressionANYAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TL_Ce_Atomic__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_Atomic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Atomic__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_AtomicAccess().getANYKeyword_2_1()); }

	'ANY' 

{ after(grammarAccess.getTL_Ce_AtomicAccess().getANYKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TL_Ce_Atomic__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_Atomic__Group_3__0__Impl
	rule__TL_Ce_Atomic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Atomic__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_AtomicAccess().getContentExpressionEMPTYAction_3_0()); }
(

)
{ after(grammarAccess.getTL_Ce_AtomicAccess().getContentExpressionEMPTYAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TL_Ce_Atomic__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_Atomic__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Atomic__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_AtomicAccess().getEMPTYKeyword_3_1()); }

	'EMPTY' 

{ after(grammarAccess.getTL_Ce_AtomicAccess().getEMPTYKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TL_Ce_Atomic__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_Atomic__Group_4__0__Impl
	rule__TL_Ce_Atomic__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Atomic__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_AtomicAccess().getContentExpressionSOMETHINGAction_4_0()); }
(

)
{ after(grammarAccess.getTL_Ce_AtomicAccess().getContentExpressionSOMETHINGAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TL_Ce_Atomic__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TL_Ce_Atomic__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Atomic__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_AtomicAccess().getSOMETHINGKeyword_4_1()); }

	'SOMETHING' 

{ after(grammarAccess.getTL_Ce_AtomicAccess().getSOMETHINGKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TLOutput__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLOutput__Group__0__Impl
	rule__TLOutput__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TLOutput__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLOutputAccess().getOutputKeyword_0()); }

	'output' 

{ after(grammarAccess.getTLOutputAccess().getOutputKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLOutput__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLOutput__Group__1__Impl
	rule__TLOutput__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TLOutput__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLOutputAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getTLOutputAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLOutput__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLOutput__Group__2__Impl
	rule__TLOutput__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TLOutput__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLOutputAccess().getGroup_2()); }
(rule__TLOutput__Group_2__0)?
{ after(grammarAccess.getTLOutputAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLOutput__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLOutput__Group__3__Impl
	rule__TLOutput__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TLOutput__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLOutputAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getTLOutputAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLOutput__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLOutput__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TLOutput__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLOutputAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getTLOutputAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TLOutput__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLOutput__Group_2__0__Impl
	rule__TLOutput__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TLOutput__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLOutputAccess().getPrimitivesAssignment_2_0()); }
(rule__TLOutput__PrimitivesAssignment_2_0)
{ after(grammarAccess.getTLOutputAccess().getPrimitivesAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLOutput__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLOutput__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TLOutput__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLOutputAccess().getGroup_2_1()); }
(rule__TLOutput__Group_2_1__0)*
{ after(grammarAccess.getTLOutputAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TLOutput__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLOutput__Group_2_1__0__Impl
	rule__TLOutput__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TLOutput__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLOutputAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getTLOutputAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLOutput__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLOutput__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TLOutput__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLOutputAccess().getPrimitivesAssignment_2_1_1()); }
(rule__TLOutput__PrimitivesAssignment_2_1_1)
{ after(grammarAccess.getTLOutputAccess().getPrimitivesAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TLLoop__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLLoop__Group__0__Impl
	rule__TLLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getTLLoopAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLLoop__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLLoop__Group__1__Impl
	rule__TLLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getEachKeyword_1()); }

	'each' 

{ after(grammarAccess.getTLLoopAccess().getEachKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLLoop__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLLoop__Group__2__Impl
	rule__TLLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getTLLoopAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLLoop__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLLoop__Group__3__Impl
	rule__TLLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getVariablesAssignment_3()); }
(rule__TLLoop__VariablesAssignment_3)
{ after(grammarAccess.getTLLoopAccess().getVariablesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLLoop__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLLoop__Group__4__Impl
	rule__TLLoop__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getGroup_4()); }
(rule__TLLoop__Group_4__0)*
{ after(grammarAccess.getTLLoopAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLLoop__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLLoop__Group__5__Impl
	rule__TLLoop__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getTLLoopAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLLoop__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLLoop__Group__6__Impl
	rule__TLLoop__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getInKeyword_6()); }

	'in' 

{ after(grammarAccess.getTLLoopAccess().getInKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLLoop__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLLoop__Group__7__Impl
	rule__TLLoop__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getRegionAssignment_7()); }
(rule__TLLoop__RegionAssignment_7)
{ after(grammarAccess.getTLLoopAccess().getRegionAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLLoop__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLLoop__Group__8__Impl
	rule__TLLoop__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getGroup_8()); }
(rule__TLLoop__Group_8__0)?
{ after(grammarAccess.getTLLoopAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLLoop__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLLoop__Group__9__Impl
	rule__TLLoop__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getLeftCurlyBracketKeyword_9()); }

	'{' 

{ after(grammarAccess.getTLLoopAccess().getLeftCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLLoop__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLLoop__Group__10__Impl
	rule__TLLoop__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getStatementsAssignment_10()); }
(rule__TLLoop__StatementsAssignment_10)*
{ after(grammarAccess.getTLLoopAccess().getStatementsAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLLoop__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLLoop__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getRightCurlyBracketKeyword_11()); }

	'}' 

{ after(grammarAccess.getTLLoopAccess().getRightCurlyBracketKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__TLLoop__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLLoop__Group_4__0__Impl
	rule__TLLoop__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getTLLoopAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLLoop__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLLoop__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getVariablesAssignment_4_1()); }
(rule__TLLoop__VariablesAssignment_4_1)
{ after(grammarAccess.getTLLoopAccess().getVariablesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TLLoop__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLLoop__Group_8__0__Impl
	rule__TLLoop__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getFullStopKeyword_8_0()); }

	'.' 

{ after(grammarAccess.getTLLoopAccess().getFullStopKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLLoop__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLLoop__Group_8__1__Impl
	rule__TLLoop__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getModeAssignment_8_1()); }
(rule__TLLoop__ModeAssignment_8_1)
{ after(grammarAccess.getTLLoopAccess().getModeAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLLoop__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLLoop__Group_8__2__Impl
	rule__TLLoop__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getLeftParenthesisKeyword_8_2()); }

	'(' 

{ after(grammarAccess.getTLLoopAccess().getLeftParenthesisKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLLoop__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLLoop__Group_8__3__Impl
	rule__TLLoop__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getContentExpressionAssignment_8_3()); }
(rule__TLLoop__ContentExpressionAssignment_8_3)
{ after(grammarAccess.getTLLoopAccess().getContentExpressionAssignment_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLLoop__Group_8__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLLoop__Group_8__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__Group_8__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getRightParenthesisKeyword_8_4()); }

	')' 

{ after(grammarAccess.getTLLoopAccess().getRightParenthesisKeyword_8_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TLIf__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLIf__Group__0__Impl
	rule__TLIf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TLIf__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLIfAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getTLIfAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLIf__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLIf__Group__1__Impl
	rule__TLIf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TLIf__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLIfAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getTLIfAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLIf__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLIf__Group__2__Impl
	rule__TLIf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TLIf__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLIfAccess().getConditionAssignment_2()); }
(rule__TLIf__ConditionAssignment_2)
{ after(grammarAccess.getTLIfAccess().getConditionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLIf__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLIf__Group__3__Impl
	rule__TLIf__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TLIf__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLIfAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getTLIfAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLIf__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLIf__Group__4__Impl
	rule__TLIf__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TLIf__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLIfAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getTLIfAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLIf__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLIf__Group__5__Impl
	rule__TLIf__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TLIf__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLIfAccess().getIfBlockAssignment_5()); }
(rule__TLIf__IfBlockAssignment_5)*
{ after(grammarAccess.getTLIfAccess().getIfBlockAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLIf__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLIf__Group__6__Impl
	rule__TLIf__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TLIf__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLIfAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getTLIfAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLIf__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLIf__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TLIf__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLIfAccess().getGroup_7()); }
(rule__TLIf__Group_7__0)?
{ after(grammarAccess.getTLIfAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__TLIf__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLIf__Group_7__0__Impl
	rule__TLIf__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TLIf__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLIfAccess().getElseKeyword_7_0()); }

	'else' 

{ after(grammarAccess.getTLIfAccess().getElseKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLIf__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLIf__Group_7__1__Impl
	rule__TLIf__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TLIf__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLIfAccess().getLeftCurlyBracketKeyword_7_1()); }

	'{' 

{ after(grammarAccess.getTLIfAccess().getLeftCurlyBracketKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLIf__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLIf__Group_7__2__Impl
	rule__TLIf__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TLIf__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLIfAccess().getElseBlockAssignment_7_2()); }
(rule__TLIf__ElseBlockAssignment_7_2)*
{ after(grammarAccess.getTLIfAccess().getElseBlockAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLIf__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLIf__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TLIf__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLIfAccess().getRightCurlyBracketKeyword_7_3()); }

	'}' 

{ after(grammarAccess.getTLIfAccess().getRightCurlyBracketKeyword_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TLBoolExprNot__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLBoolExprNot__Group__0__Impl
	rule__TLBoolExprNot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TLBoolExprNot__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLBoolExprNotAccess().getNotKeyword_0()); }

	'not' 

{ after(grammarAccess.getTLBoolExprNotAccess().getNotKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLBoolExprNot__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLBoolExprNot__Group__1__Impl
	rule__TLBoolExprNot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TLBoolExprNot__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLBoolExprNotAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getTLBoolExprNotAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLBoolExprNot__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLBoolExprNot__Group__2__Impl
	rule__TLBoolExprNot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TLBoolExprNot__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLBoolExprNotAccess().getExpressionAssignment_2()); }
(rule__TLBoolExprNot__ExpressionAssignment_2)
{ after(grammarAccess.getTLBoolExprNotAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLBoolExprNot__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLBoolExprNot__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TLBoolExprNot__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLBoolExprNotAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getTLBoolExprNotAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TLBoolExprEmpty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLBoolExprEmpty__Group__0__Impl
	rule__TLBoolExprEmpty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TLBoolExprEmpty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLBoolExprEmptyAccess().getRegionAssignment_0()); }
(rule__TLBoolExprEmpty__RegionAssignment_0)
{ after(grammarAccess.getTLBoolExprEmptyAccess().getRegionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLBoolExprEmpty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLBoolExprEmpty__Group__1__Impl
	rule__TLBoolExprEmpty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TLBoolExprEmpty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLBoolExprEmptyAccess().getIsKeyword_1()); }

	'is' 

{ after(grammarAccess.getTLBoolExprEmptyAccess().getIsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TLBoolExprEmpty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TLBoolExprEmpty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TLBoolExprEmpty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLBoolExprEmptyAccess().getEmptyKeyword_2()); }

	'empty' 

{ after(grammarAccess.getTLBoolExprEmptyAccess().getEmptyKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Delimiters__UnorderedGroup
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getDelimitersAccess().getUnorderedGroup());
    }
:
	rule__Delimiters__UnorderedGroup__0
	
	{getUnorderedGroupHelper().canLeave(grammarAccess.getDelimitersAccess().getUnorderedGroup())}?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getDelimitersAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}


rule__Delimiters__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDelimitersAccess().getUnorderedGroup(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDelimitersAccess().getUnorderedGroup(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getDelimitersAccess().getUnorderedGroup_0()); }
						(rule__Delimiters__UnorderedGroup_0)
						{ after(grammarAccess.getDelimitersAccess().getUnorderedGroup_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDelimitersAccess().getUnorderedGroup(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDelimitersAccess().getUnorderedGroup(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getDelimitersAccess().getGroup_1()); }
						(rule__Delimiters__Group_1__0)
						{ after(grammarAccess.getDelimitersAccess().getGroup_1()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelimitersAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}


rule__Delimiters__UnorderedGroup__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delimiters__UnorderedGroup__Impl
	rule__Delimiters__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Delimiters__UnorderedGroup__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delimiters__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}






rule__Delimiters__UnorderedGroup_0
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getDelimitersAccess().getUnorderedGroup_0());
    }
:
	rule__Delimiters__UnorderedGroup_0__0
	
	{getUnorderedGroupHelper().canLeave(grammarAccess.getDelimitersAccess().getUnorderedGroup_0())}?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getDelimitersAccess().getUnorderedGroup_0());
	restoreStackSize(stackSize);
}


rule__Delimiters__UnorderedGroup_0__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDelimitersAccess().getUnorderedGroup_0(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDelimitersAccess().getUnorderedGroup_0(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getDelimitersAccess().getGroup_0_0()); }
						(rule__Delimiters__Group_0_0__0)
						{ after(grammarAccess.getDelimitersAccess().getGroup_0_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDelimitersAccess().getUnorderedGroup_0(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDelimitersAccess().getUnorderedGroup_0(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getDelimitersAccess().getGroup_0_1()); }
						(rule__Delimiters__Group_0_1__0)
						{ after(grammarAccess.getDelimitersAccess().getGroup_0_1()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelimitersAccess().getUnorderedGroup_0());
	restoreStackSize(stackSize);
}


rule__Delimiters__UnorderedGroup_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delimiters__UnorderedGroup_0__Impl
	rule__Delimiters__UnorderedGroup_0__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Delimiters__UnorderedGroup_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delimiters__UnorderedGroup_0__Impl
;
finally {
	restoreStackSize(stackSize);
}






rule__Type__UnorderedGroup_0_4
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getTypeAccess().getUnorderedGroup_0_4());
    }
:
	rule__Type__UnorderedGroup_0_4__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getTypeAccess().getUnorderedGroup_0_4());
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_0_4__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_0_4_0()); }
						(rule__Type__Group_0_4_0__0)
						{ after(grammarAccess.getTypeAccess().getGroup_0_4_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_0_4_1()); }
						(rule__Type__Group_0_4_1__0)
						{ after(grammarAccess.getTypeAccess().getGroup_0_4_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_0_4_2()); }
						(rule__Type__Group_0_4_2__0)
						{ after(grammarAccess.getTypeAccess().getGroup_0_4_2()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 3);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_0_4_3()); }
						(rule__Type__Group_0_4_3__0)
						{ after(grammarAccess.getTypeAccess().getGroup_0_4_3()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 4);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_0_4_4()); }
						(rule__Type__Group_0_4_4__0)
						{ after(grammarAccess.getTypeAccess().getGroup_0_4_4()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 5);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_0_4_5()); }
						(rule__Type__Group_0_4_5__0)
						{ after(grammarAccess.getTypeAccess().getGroup_0_4_5()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 6);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_0_4_6()); }
						(rule__Type__Group_0_4_6__0)
						{ after(grammarAccess.getTypeAccess().getGroup_0_4_6()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 7)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 7);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_0_4_7()); }
						(rule__Type__Group_0_4_7__0)
						{ after(grammarAccess.getTypeAccess().getGroup_0_4_7()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 8)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 8);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_0_4_8()); }
						(rule__Type__Group_0_4_8__0)
						{ after(grammarAccess.getTypeAccess().getGroup_0_4_8()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 9)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 9);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_0_4_9()); }
						(rule__Type__Group_0_4_9__0)
						{ after(grammarAccess.getTypeAccess().getGroup_0_4_9()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 10)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 10);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_0_4_10()); }
						(rule__Type__Group_0_4_10__0)
						{ after(grammarAccess.getTypeAccess().getGroup_0_4_10()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 11)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_0_4(), 11);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_0_4_11()); }
						(rule__Type__Group_0_4_11__0)
						{ after(grammarAccess.getTypeAccess().getGroup_0_4_11()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTypeAccess().getUnorderedGroup_0_4());
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_0_4__Impl
	rule__Type__UnorderedGroup_0_4__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_0_4__Impl
	rule__Type__UnorderedGroup_0_4__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_0_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_0_4__Impl
	rule__Type__UnorderedGroup_0_4__3?
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_0_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_0_4__Impl
	rule__Type__UnorderedGroup_0_4__4?
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_0_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_0_4__Impl
	rule__Type__UnorderedGroup_0_4__5?
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_0_4__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_0_4__Impl
	rule__Type__UnorderedGroup_0_4__6?
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_0_4__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_0_4__Impl
	rule__Type__UnorderedGroup_0_4__7?
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_0_4__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_0_4__Impl
	rule__Type__UnorderedGroup_0_4__8?
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_0_4__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_0_4__Impl
	rule__Type__UnorderedGroup_0_4__9?
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_0_4__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_0_4__Impl
	rule__Type__UnorderedGroup_0_4__10?
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_0_4__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_0_4__Impl
	rule__Type__UnorderedGroup_0_4__11?
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_0_4__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_0_4__Impl
;
finally {
	restoreStackSize(stackSize);
}


























rule__Type__UnorderedGroup_1_5
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getTypeAccess().getUnorderedGroup_1_5());
    }
:
	rule__Type__UnorderedGroup_1_5__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getTypeAccess().getUnorderedGroup_1_5());
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_1_5__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_1_5(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_1_5(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_1_5_0()); }
						(rule__Type__Group_1_5_0__0)
						{ after(grammarAccess.getTypeAccess().getGroup_1_5_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_1_5(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_1_5(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_1_5_1()); }
						(rule__Type__Group_1_5_1__0)
						{ after(grammarAccess.getTypeAccess().getGroup_1_5_1()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTypeAccess().getUnorderedGroup_1_5());
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_1_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_1_5__Impl
	rule__Type__UnorderedGroup_1_5__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_1_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_1_5__Impl
;
finally {
	restoreStackSize(stackSize);
}






rule__Type__UnorderedGroup_2_3
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getTypeAccess().getUnorderedGroup_2_3());
    }
:
	rule__Type__UnorderedGroup_2_3__0
	
	{getUnorderedGroupHelper().canLeave(grammarAccess.getTypeAccess().getUnorderedGroup_2_3())}?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getTypeAccess().getUnorderedGroup_2_3());
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_2_3__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_2_3(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_2_3(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_2_3_0()); }
						(rule__Type__Group_2_3_0__0)
						{ after(grammarAccess.getTypeAccess().getGroup_2_3_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_2_3(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_2_3(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_2_3_1()); }
						(rule__Type__Group_2_3_1__0)
						{ after(grammarAccess.getTypeAccess().getGroup_2_3_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_2_3(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_2_3(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_2_3_2()); }
						(rule__Type__Group_2_3_2__0)
						{ after(grammarAccess.getTypeAccess().getGroup_2_3_2()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTypeAccess().getUnorderedGroup_2_3());
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_2_3__Impl
	rule__Type__UnorderedGroup_2_3__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_2_3__Impl
	rule__Type__UnorderedGroup_2_3__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_2_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_2_3__Impl
;
finally {
	restoreStackSize(stackSize);
}








rule__Type__UnorderedGroup_2_3_0_2
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getTypeAccess().getUnorderedGroup_2_3_0_2());
    }
:
	rule__Type__UnorderedGroup_2_3_0_2__0
	
	{getUnorderedGroupHelper().canLeave(grammarAccess.getTypeAccess().getUnorderedGroup_2_3_0_2())}?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getTypeAccess().getUnorderedGroup_2_3_0_2());
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_2_3_0_2__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_2_3_0_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_2_3_0_2(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_2_3_0_2_0()); }
						(rule__Type__Group_2_3_0_2_0__0)
						{ after(grammarAccess.getTypeAccess().getGroup_2_3_0_2_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_2_3_0_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_2_3_0_2(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_2_3_0_2_1()); }
						(rule__Type__Group_2_3_0_2_1__0)
						{ after(grammarAccess.getTypeAccess().getGroup_2_3_0_2_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_2_3_0_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_2_3_0_2(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_2_3_0_2_2()); }
						(rule__Type__Group_2_3_0_2_2__0)
						{ after(grammarAccess.getTypeAccess().getGroup_2_3_0_2_2()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTypeAccess().getUnorderedGroup_2_3_0_2(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTypeAccess().getUnorderedGroup_2_3_0_2(), 3);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTypeAccess().getGroup_2_3_0_2_3()); }
						(rule__Type__Group_2_3_0_2_3__0)
						{ after(grammarAccess.getTypeAccess().getGroup_2_3_0_2_3()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTypeAccess().getUnorderedGroup_2_3_0_2());
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_2_3_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_2_3_0_2__Impl
	rule__Type__UnorderedGroup_2_3_0_2__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_2_3_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_2_3_0_2__Impl
	rule__Type__UnorderedGroup_2_3_0_2__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_2_3_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_2_3_0_2__Impl
	rule__Type__UnorderedGroup_2_3_0_2__3?
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__UnorderedGroup_2_3_0_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__UnorderedGroup_2_3_0_2__Impl
;
finally {
	restoreStackSize(stackSize);
}










rule__Sculpt__DelimiterAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getDelimiterDelimitersParserRuleCall_1_1_0()); }
	ruleDelimiters{ after(grammarAccess.getSculptAccess().getDelimiterDelimitersParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__TypesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getTypesTypeParserRuleCall_2_1_0()); }
	ruleType{ after(grammarAccess.getSculptAccess().getTypesTypeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__TokensAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getTokensTokenParserRuleCall_3_1_0()); }
	ruleToken{ after(grammarAccess.getSculptAccess().getTokensTokenParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__RegionTokensAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getRegionTokensRegionTokenParserRuleCall_4_1_0()); }
	ruleRegionToken{ after(grammarAccess.getSculptAccess().getRegionTokensRegionTokenParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__ConstraintsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getConstraintsConstraintParserRuleCall_5_1_0()); }
	ruleConstraint{ after(grammarAccess.getSculptAccess().getConstraintsConstraintParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sculpt__TransformationProgramAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSculptAccess().getTransformationProgramTransformationProgramParserRuleCall_6_1_0()); }
	ruleTransformationProgram{ after(grammarAccess.getSculptAccess().getTransformationProgramTransformationProgramParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Delimiters__RowDelimAssignment_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelimitersAccess().getRowDelimSTRINGTerminalRuleCall_0_0_2_0()); }
	RULE_STRING{ after(grammarAccess.getDelimitersAccess().getRowDelimSTRINGTerminalRuleCall_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Delimiters__ColDelimAssignment_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelimitersAccess().getColDelimSTRINGTerminalRuleCall_0_1_2_0()); }
	RULE_STRING{ after(grammarAccess.getDelimitersAccess().getColDelimSTRINGTerminalRuleCall_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Delimiters__ListDelimAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelimitersAccess().getListDelimSTRINGTerminalRuleCall_1_2_0()); }
	RULE_STRING{ after(grammarAccess.getDelimitersAccess().getListDelimSTRINGTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__BaseAssignment_0_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getBaseSTRINGTerminalRuleCall_0_3_2_0()); }
	RULE_STRING{ after(grammarAccess.getTypeAccess().getBaseSTRINGTerminalRuleCall_0_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__FormatAssignment_0_4_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getFormatSTRINGTerminalRuleCall_0_4_0_2_0()); }
	RULE_STRING{ after(grammarAccess.getTypeAccess().getFormatSTRINGTerminalRuleCall_0_4_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__DecimalCharAssignment_0_4_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDecimalCharSTRINGTerminalRuleCall_0_4_1_2_0()); }
	RULE_STRING{ after(grammarAccess.getTypeAccess().getDecimalCharSTRINGTerminalRuleCall_0_4_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__GroupCharAssignment_0_4_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroupCharSTRINGTerminalRuleCall_0_4_2_2_0()); }
	RULE_STRING{ after(grammarAccess.getTypeAccess().getGroupCharSTRINGTerminalRuleCall_0_4_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__LengthAssignment_0_4_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLengthINTTerminalRuleCall_0_4_3_2_0()); }
	RULE_INT{ after(grammarAccess.getTypeAccess().getLengthINTTerminalRuleCall_0_4_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__MinLengthAssignment_0_4_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMinLengthINTTerminalRuleCall_0_4_4_2_0()); }
	RULE_INT{ after(grammarAccess.getTypeAccess().getMinLengthINTTerminalRuleCall_0_4_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__MaxLengthAssignment_0_4_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMaxLengthINTTerminalRuleCall_0_4_5_2_0()); }
	RULE_INT{ after(grammarAccess.getTypeAccess().getMaxLengthINTTerminalRuleCall_0_4_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__MinimumAssignment_0_4_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMinimumSTRINGTerminalRuleCall_0_4_6_2_0()); }
	RULE_STRING{ after(grammarAccess.getTypeAccess().getMinimumSTRINGTerminalRuleCall_0_4_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__MaximumAssignment_0_4_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMaximumSTRINGTerminalRuleCall_0_4_7_2_0()); }
	RULE_STRING{ after(grammarAccess.getTypeAccess().getMaximumSTRINGTerminalRuleCall_0_4_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__MinExclusiveAssignment_0_4_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMinExclusiveSTRINGTerminalRuleCall_0_4_8_2_0()); }
	RULE_STRING{ after(grammarAccess.getTypeAccess().getMinExclusiveSTRINGTerminalRuleCall_0_4_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__MaxExclusiveAssignment_0_4_9_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMaxExclusiveSTRINGTerminalRuleCall_0_4_9_2_0()); }
	RULE_STRING{ after(grammarAccess.getTypeAccess().getMaxExclusiveSTRINGTerminalRuleCall_0_4_9_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__DefaultValueAssignment_0_4_10_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDefaultValueSTRINGTerminalRuleCall_0_4_10_2_0()); }
	RULE_STRING{ after(grammarAccess.getTypeAccess().getDefaultValueSTRINGTerminalRuleCall_0_4_10_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__EmptyValueAssignment_0_4_11_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEmptyValueSTRINGTerminalRuleCall_0_4_11_2_0()); }
	RULE_STRING{ after(grammarAccess.getTypeAccess().getEmptyValueSTRINGTerminalRuleCall_0_4_11_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__PrimitivesAssignment_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPrimitivesCompoundTypePrimitiveParserRuleCall_1_3_0_0()); }
	ruleCompoundTypePrimitive{ after(grammarAccess.getTypeAccess().getPrimitivesCompoundTypePrimitiveParserRuleCall_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__PrimitivesAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPrimitivesCompoundTypePrimitiveParserRuleCall_1_4_0()); }
	ruleCompoundTypePrimitive{ after(grammarAccess.getTypeAccess().getPrimitivesCompoundTypePrimitiveParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__DefaultValueAssignment_1_5_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDefaultValueSTRINGTerminalRuleCall_1_5_0_2_0()); }
	RULE_STRING{ after(grammarAccess.getTypeAccess().getDefaultValueSTRINGTerminalRuleCall_1_5_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__EmptyValueAssignment_1_5_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEmptyValueSTRINGTerminalRuleCall_1_5_1_2_0()); }
	RULE_STRING{ after(grammarAccess.getTypeAccess().getEmptyValueSTRINGTerminalRuleCall_1_5_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_2_1_0()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__BaseAssignment_2_3_0_2_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getBaseTypeCrossReference_2_3_0_2_0_2_0()); }
(
{ before(grammarAccess.getTypeAccess().getBaseTypeIDTerminalRuleCall_2_3_0_2_0_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getBaseTypeIDTerminalRuleCall_2_3_0_2_0_2_0_1()); }
)
{ after(grammarAccess.getTypeAccess().getBaseTypeCrossReference_2_3_0_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__MinElementsAssignment_2_3_0_2_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMinElementsINTTerminalRuleCall_2_3_0_2_1_2_0()); }
	RULE_INT{ after(grammarAccess.getTypeAccess().getMinElementsINTTerminalRuleCall_2_3_0_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__MaxElementsAssignment_2_3_0_2_2_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMaxElementsINTTerminalRuleCall_2_3_0_2_2_2_0_0()); }
	RULE_INT{ after(grammarAccess.getTypeAccess().getMaxElementsINTTerminalRuleCall_2_3_0_2_2_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__SeparatorAssignment_2_3_0_2_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSeparatorSTRINGTerminalRuleCall_2_3_0_2_3_2_0()); }
	RULE_STRING{ after(grammarAccess.getTypeAccess().getSeparatorSTRINGTerminalRuleCall_2_3_0_2_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__DefaultValueAssignment_2_3_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDefaultValueSTRINGTerminalRuleCall_2_3_1_2_0()); }
	RULE_STRING{ after(grammarAccess.getTypeAccess().getDefaultValueSTRINGTerminalRuleCall_2_3_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__EmptyValueAssignment_2_3_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEmptyValueSTRINGTerminalRuleCall_2_3_2_2_0()); }
	RULE_STRING{ after(grammarAccess.getTypeAccess().getEmptyValueSTRINGTerminalRuleCall_2_3_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__Token__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTokenAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTokenAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Token__TokenRegexAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTokenAccess().getTokenRegexSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getTokenAccess().getTokenRegexSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundTypePrimitive__TextAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundTypePrimitiveAccess().getTextSTRINGTerminalRuleCall_0_1_0()); }
	RULE_STRING{ after(grammarAccess.getCompoundTypePrimitiveAccess().getTextSTRINGTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundTypePrimitive__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundTypePrimitiveAccess().getTypeTypeCrossReference_1_1_0()); }
(
{ before(grammarAccess.getCompoundTypePrimitiveAccess().getTypeTypeIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getCompoundTypePrimitiveAccess().getTypeTypeIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getCompoundTypePrimitiveAccess().getTypeTypeCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegionToken__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionTokenAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRegionTokenAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegionToken__RegionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionTokenAccess().getRegionNodeExpressionParserRuleCall_3_0()); }
	ruleNodeExpression{ after(grammarAccess.getRegionTokenAccess().getRegionNodeExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContentConstraint__RegionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentConstraintAccess().getRegionNodeExpressionParserRuleCall_0_0()); }
	ruleNodeExpression{ after(grammarAccess.getContentConstraintAccess().getRegionNodeExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContentConstraint__ValidationModeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentConstraintAccess().getValidationModeValidationModeEnumRuleCall_1_0()); }
	ruleValidationMode{ after(grammarAccess.getContentConstraintAccess().getValidationModeValidationModeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContentConstraint__ContentExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentConstraintAccess().getContentExpressionContentExpressionParserRuleCall_2_0()); }
	ruleContentExpression{ after(grammarAccess.getContentConstraintAccess().getContentExpressionContentExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKeyConstraint__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryKeyConstraintAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getPrimaryKeyConstraintAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKeyConstraint__TupleSelectorAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryKeyConstraintAccess().getTupleSelectorTupleSelectorParserRuleCall_4_0()); }
	ruleTupleSelector{ after(grammarAccess.getPrimaryKeyConstraintAccess().getTupleSelectorTupleSelectorParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKeyConstraint__TupleSelectorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeignKeyConstraintAccess().getTupleSelectorTupleSelectorParserRuleCall_2_0()); }
	ruleTupleSelector{ after(grammarAccess.getForeignKeyConstraintAccess().getTupleSelectorTupleSelectorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKeyConstraint__ReferencedRelationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeignKeyConstraintAccess().getReferencedRelationPrimaryKeyConstraintCrossReference_4_0()); }
(
{ before(grammarAccess.getForeignKeyConstraintAccess().getReferencedRelationPrimaryKeyConstraintIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getForeignKeyConstraintAccess().getReferencedRelationPrimaryKeyConstraintIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getForeignKeyConstraintAccess().getReferencedRelationPrimaryKeyConstraintCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TupleSelector__RegionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleSelectorAccess().getRegionNodeExpressionParserRuleCall_0_0()); }
	ruleNodeExpression{ after(grammarAccess.getTupleSelectorAccess().getRegionNodeExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TupleSelector__SelectorsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleSelectorAccess().getSelectorsPath_ExpressionParserRuleCall_2_0()); }
	rulePath_Expression{ after(grammarAccess.getTupleSelectorAccess().getSelectorsPath_ExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TupleSelector__SelectorsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleSelectorAccess().getSelectorsPath_ExpressionParserRuleCall_3_1_0()); }
	rulePath_Expression{ after(grammarAccess.getTupleSelectorAccess().getSelectorsPath_ExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationProgram__DelimiterAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationProgramAccess().getDelimiterDelimitersParserRuleCall_0_0()); }
	ruleDelimiters{ after(grammarAccess.getTransformationProgramAccess().getDelimiterDelimitersParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationProgram__StatementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationProgramAccess().getStatementsTLStatementParserRuleCall_1_0()); }
	ruleTLStatement{ after(grammarAccess.getTransformationProgramAccess().getStatementsTLStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Or__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_OrAccess().getRightNe_AndParserRuleCall_1_2_0()); }
	ruleNe_And{ after(grammarAccess.getNe_OrAccess().getRightNe_AndParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_And__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AndAccess().getRightNe_NotParserRuleCall_1_2_0()); }
	ruleNe_Not{ after(grammarAccess.getNe_AndAccess().getRightNe_NotParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Not__RegionAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_NotAccess().getRegionNe_PathParserRuleCall_0_2_0()); }
	ruleNe_Path{ after(grammarAccess.getNe_NotAccess().getRegionNe_PathParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Path__PathAssignment_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_PathAccess().getPathPath_ExpressionParserRuleCall_0_1_1_1_0()); }
	rulePath_Expression{ after(grammarAccess.getNe_PathAccess().getPathPath_ExpressionParserRuleCall_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Path__PathAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_PathAccess().getPathPath_ExpressionParserRuleCall_1_2_0()); }
	rulePath_Expression{ after(grammarAccess.getNe_PathAccess().getPathPath_ExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Path__PathAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_PathAccess().getPathPath_ExpressionParserRuleCall_2_1_0()); }
	rulePath_Expression{ after(grammarAccess.getNe_PathAccess().getPathPath_ExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__ModeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getModeRowColEnumRuleCall_1_1_0()); }
	ruleRowCol{ after(grammarAccess.getNe_AtomicAccess().getModeRowColEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__RowAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getRowINTTerminalRuleCall_1_3_0()); }
	RULE_INT{ after(grammarAccess.getNe_AtomicAccess().getRowINTTerminalRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__ColumnAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getColumnINTTerminalRuleCall_1_5_0()); }
	RULE_INT{ after(grammarAccess.getNe_AtomicAccess().getColumnINTTerminalRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__ModeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getModeRowColEnumRuleCall_2_1_0()); }
	ruleRowCol{ after(grammarAccess.getNe_AtomicAccess().getModeRowColEnumRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__IndexAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getIndexINTTerminalRuleCall_2_3_0()); }
	RULE_INT{ after(grammarAccess.getNe_AtomicAccess().getIndexINTTerminalRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__ModeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getModeRowColEnumRuleCall_3_1_0()); }
	ruleRowCol{ after(grammarAccess.getNe_AtomicAccess().getModeRowColEnumRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__TokenAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getTokenTokenCrossReference_3_3_0()); }
(
{ before(grammarAccess.getNe_AtomicAccess().getTokenTokenIDTerminalRuleCall_3_3_0_1()); }
	RULE_ID{ after(grammarAccess.getNe_AtomicAccess().getTokenTokenIDTerminalRuleCall_3_3_0_1()); }
)
{ after(grammarAccess.getNe_AtomicAccess().getTokenTokenCrossReference_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__ModeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getModeRowColEnumRuleCall_4_1_0()); }
	ruleRowCol{ after(grammarAccess.getNe_AtomicAccess().getModeRowColEnumRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__StringAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getStringSTRINGTerminalRuleCall_4_3_0()); }
	RULE_STRING{ after(grammarAccess.getNe_AtomicAccess().getStringSTRINGTerminalRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic__ModeAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_AtomicAccess().getModeRowColEnumRuleCall_5_1_0()); }
	ruleRowCol{ after(grammarAccess.getNe_AtomicAccess().getModeRowColEnumRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Comparison__TypeAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_ComparisonAccess().getTypeTypeCrossReference_0_0_0()); }
(
{ before(grammarAccess.getNe_ComparisonAccess().getTypeTypeIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getNe_ComparisonAccess().getTypeTypeIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getNe_ComparisonAccess().getTypeTypeCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Comparison__TypeSpecifierAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_ComparisonAccess().getTypeSpecifierTypeSpecifierParserRuleCall_0_1_0()); }
	ruleTypeSpecifier{ after(grammarAccess.getNe_ComparisonAccess().getTypeSpecifierTypeSpecifierParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Comparison__CompAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_ComparisonAccess().getCompComparatorEnumRuleCall_0_2_0()); }
	ruleComparator{ after(grammarAccess.getNe_ComparisonAccess().getCompComparatorEnumRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Comparison__ValueAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_ComparisonAccess().getValueSTRINGTerminalRuleCall_0_3_0()); }
	RULE_STRING{ after(grammarAccess.getNe_ComparisonAccess().getValueSTRINGTerminalRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Comparison__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_ComparisonAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getNe_ComparisonAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Comparison__CompAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_ComparisonAccess().getCompComparatorEnumRuleCall_1_2_0()); }
	ruleComparator{ after(grammarAccess.getNe_ComparisonAccess().getCompComparatorEnumRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Comparison__TypeAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_ComparisonAccess().getTypeTypeCrossReference_1_3_0()); }
(
{ before(grammarAccess.getNe_ComparisonAccess().getTypeTypeIDTerminalRuleCall_1_3_0_1()); }
	RULE_ID{ after(grammarAccess.getNe_ComparisonAccess().getTypeTypeIDTerminalRuleCall_1_3_0_1()); }
)
{ after(grammarAccess.getNe_ComparisonAccess().getTypeTypeCrossReference_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Comparison__TypeSpecifierAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_ComparisonAccess().getTypeSpecifierTypeSpecifierParserRuleCall_1_4_0()); }
	ruleTypeSpecifier{ after(grammarAccess.getNe_ComparisonAccess().getTypeSpecifierTypeSpecifierParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__SubtypeAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getSubtypeTypeCrossReference_0_2_0()); }
(
{ before(grammarAccess.getTypeSpecifierAccess().getSubtypeTypeIDTerminalRuleCall_0_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeSpecifierAccess().getSubtypeTypeIDTerminalRuleCall_0_2_0_1()); }
)
{ after(grammarAccess.getTypeSpecifierAccess().getSubtypeTypeCrossReference_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__IndexAssignment_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getIndexINTTerminalRuleCall_0_3_1_0()); }
	RULE_INT{ after(grammarAccess.getTypeSpecifierAccess().getIndexINTTerminalRuleCall_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__IndexAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getIndexINTTerminalRuleCall_1_2_0()); }
	RULE_INT{ after(grammarAccess.getTypeSpecifierAccess().getIndexINTTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic_Node_Test__RowAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_Atomic_Node_TestAccess().getRowINTTerminalRuleCall_0_2_0()); }
	RULE_INT{ after(grammarAccess.getNe_Atomic_Node_TestAccess().getRowINTTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic_Node_Test__ColumnAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_Atomic_Node_TestAccess().getColumnINTTerminalRuleCall_0_4_0()); }
	RULE_INT{ after(grammarAccess.getNe_Atomic_Node_TestAccess().getColumnINTTerminalRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ne_Atomic_Node_Test__TokenAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNe_Atomic_Node_TestAccess().getTokenAbstractTokenCrossReference_1_1_0()); }
(
{ before(grammarAccess.getNe_Atomic_Node_TestAccess().getTokenAbstractTokenIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getNe_Atomic_Node_TestAccess().getTokenAbstractTokenIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getNe_Atomic_Node_TestAccess().getTokenAbstractTokenCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Path_Expression__RestAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPath_ExpressionAccess().getRestPe_RegexParserRuleCall_1_1_1_0()); }
	rulePe_Regex{ after(grammarAccess.getPath_ExpressionAccess().getRestPe_RegexParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Or__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_OrAccess().getRightPath_ExpressionParserRuleCall_1_2_0()); }
	rulePath_Expression{ after(grammarAccess.getPe_OrAccess().getRightPath_ExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Atomic__AxesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_AtomicAccess().getAxesAlternatives_1_0()); }
(rule__Pe_Atomic__AxesAlternatives_1_0)
{ after(grammarAccess.getPe_AtomicAccess().getAxesAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Atomic__Node_testAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_AtomicAccess().getNode_testNe_Atomic_Node_TestParserRuleCall_2_0_1_0()); }
	ruleNe_Atomic_Node_Test{ after(grammarAccess.getPe_AtomicAccess().getNode_testNe_Atomic_Node_TestParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pe_Atomic__PredicateAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPe_AtomicAccess().getPredicateNodeExpressionParserRuleCall_3_1_0()); }
	ruleNodeExpression{ after(grammarAccess.getPe_AtomicAccess().getPredicateNodeExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Or__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_OrAccess().getRightCe_ListParserRuleCall_1_2_0()); }
	ruleCe_List{ after(grammarAccess.getCe_OrAccess().getRightCe_ListParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_List__RestAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ListAccess().getRestCe_RecursiveParserRuleCall_1_1_0()); }
	ruleCe_Recursive{ after(grammarAccess.getCe_ListAccess().getRestCe_RecursiveParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Atomic__TokenAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_AtomicAccess().getTokenTokenCrossReference_0_1_0()); }
(
{ before(grammarAccess.getCe_AtomicAccess().getTokenTokenIDTerminalRuleCall_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getCe_AtomicAccess().getTokenTokenIDTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getCe_AtomicAccess().getTokenTokenCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Atomic__StringAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_AtomicAccess().getStringSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getCe_AtomicAccess().getStringSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__TypeAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getTypeTypeCrossReference_0_0_0()); }
(
{ before(grammarAccess.getCe_ComparisonAccess().getTypeTypeIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getCe_ComparisonAccess().getTypeTypeIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getCe_ComparisonAccess().getTypeTypeCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__TypeSpecifierAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getTypeSpecifierTypeSpecifierParserRuleCall_0_1_0()); }
	ruleTypeSpecifier{ after(grammarAccess.getCe_ComparisonAccess().getTypeSpecifierTypeSpecifierParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__CompAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getCompComparatorEnumRuleCall_0_2_0()); }
	ruleComparator{ after(grammarAccess.getCe_ComparisonAccess().getCompComparatorEnumRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__ValueAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getValueSTRINGTerminalRuleCall_0_3_0()); }
	RULE_STRING{ after(grammarAccess.getCe_ComparisonAccess().getValueSTRINGTerminalRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getTypeTypeCrossReference_1_1_0()); }
(
{ before(grammarAccess.getCe_ComparisonAccess().getTypeTypeIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getCe_ComparisonAccess().getTypeTypeIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getCe_ComparisonAccess().getTypeTypeCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__TypeSpecifierAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getTypeSpecifierTypeSpecifierParserRuleCall_1_2_0()); }
	ruleTypeSpecifier{ after(grammarAccess.getCe_ComparisonAccess().getTypeSpecifierTypeSpecifierParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__CompAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getCompComparatorEnumRuleCall_1_3_0()); }
	ruleComparator{ after(grammarAccess.getCe_ComparisonAccess().getCompComparatorEnumRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__PathAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getPathPath_ExpressionParserRuleCall_1_5_0()); }
	rulePath_Expression{ after(grammarAccess.getCe_ComparisonAccess().getPathPath_ExpressionParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__PathAssignment_2_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getPathPath_ExpressionParserRuleCall_2_1_0_1_0()); }
	rulePath_Expression{ after(grammarAccess.getCe_ComparisonAccess().getPathPath_ExpressionParserRuleCall_2_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__ValueAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getValueSTRINGTerminalRuleCall_2_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getCe_ComparisonAccess().getValueSTRINGTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__CompAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getCompComparatorEnumRuleCall_2_2_0()); }
	ruleComparator{ after(grammarAccess.getCe_ComparisonAccess().getCompComparatorEnumRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__TypeAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getTypeTypeCrossReference_2_3_0()); }
(
{ before(grammarAccess.getCe_ComparisonAccess().getTypeTypeIDTerminalRuleCall_2_3_0_1()); }
	RULE_ID{ after(grammarAccess.getCe_ComparisonAccess().getTypeTypeIDTerminalRuleCall_2_3_0_1()); }
)
{ after(grammarAccess.getCe_ComparisonAccess().getTypeTypeCrossReference_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ce_Comparison__TypeSpecifierAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCe_ComparisonAccess().getTypeSpecifierTypeSpecifierParserRuleCall_2_4_0()); }
	ruleTypeSpecifier{ after(grammarAccess.getCe_ComparisonAccess().getTypeSpecifierTypeSpecifierParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLVariable__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLVariableAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getTLVariableAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLOutputPrimitive__TextAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLOutputPrimitiveAccess().getTextSTRINGTerminalRuleCall_0_1_0()); }
	RULE_STRING{ after(grammarAccess.getTLOutputPrimitiveAccess().getTextSTRINGTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLOutputPrimitive__VariableAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLOutputPrimitiveAccess().getVariableTLVariableCrossReference_1_1_0()); }
(
{ before(grammarAccess.getTLOutputPrimitiveAccess().getVariableTLVariableIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTLOutputPrimitiveAccess().getVariableTLVariableIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getTLOutputPrimitiveAccess().getVariableTLVariableCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLOutputPrimitive__TypeSpecifierAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLOutputPrimitiveAccess().getTypeSpecifierTypeSpecifierParserRuleCall_1_2_0()); }
	ruleTypeSpecifier{ after(grammarAccess.getTLOutputPrimitiveAccess().getTypeSpecifierTypeSpecifierParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_List__ListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_ListAccess().getListTL_Ce_RecursiveParserRuleCall_1_0()); }
	ruleTL_Ce_Recursive{ after(grammarAccess.getTL_Ce_ListAccess().getListTL_Ce_RecursiveParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_List__ListAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_ListAccess().getListCe_RecursiveParserRuleCall_2_1_0()); }
	ruleCe_Recursive{ after(grammarAccess.getTL_Ce_ListAccess().getListCe_RecursiveParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Atomic__TokenAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_AtomicAccess().getTokenTokenCrossReference_0_1_0()); }
(
{ before(grammarAccess.getTL_Ce_AtomicAccess().getTokenTokenIDTerminalRuleCall_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTL_Ce_AtomicAccess().getTokenTokenIDTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getTL_Ce_AtomicAccess().getTokenTokenCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TL_Ce_Atomic__StringAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTL_Ce_AtomicAccess().getStringSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getTL_Ce_AtomicAccess().getStringSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLOutput__PrimitivesAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLOutputAccess().getPrimitivesTLOutputPrimitiveParserRuleCall_2_0_0()); }
	ruleTLOutputPrimitive{ after(grammarAccess.getTLOutputAccess().getPrimitivesTLOutputPrimitiveParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLOutput__PrimitivesAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLOutputAccess().getPrimitivesTLOutputPrimitiveParserRuleCall_2_1_1_0()); }
	ruleTLOutputPrimitive{ after(grammarAccess.getTLOutputAccess().getPrimitivesTLOutputPrimitiveParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__VariablesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getVariablesTLVariableParserRuleCall_3_0()); }
	ruleTLVariable{ after(grammarAccess.getTLLoopAccess().getVariablesTLVariableParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__VariablesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getVariablesTLVariableParserRuleCall_4_1_0()); }
	ruleTLVariable{ after(grammarAccess.getTLLoopAccess().getVariablesTLVariableParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__RegionAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getRegionNodeExpressionParserRuleCall_7_0()); }
	ruleNodeExpression{ after(grammarAccess.getTLLoopAccess().getRegionNodeExpressionParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__ModeAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getModeTLLoopModeEnumRuleCall_8_1_0()); }
	ruleTLLoopMode{ after(grammarAccess.getTLLoopAccess().getModeTLLoopModeEnumRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__ContentExpressionAssignment_8_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getContentExpressionTL_Ce_ListParserRuleCall_8_3_0()); }
	ruleTL_Ce_List{ after(grammarAccess.getTLLoopAccess().getContentExpressionTL_Ce_ListParserRuleCall_8_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLLoop__StatementsAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLLoopAccess().getStatementsTLStatementParserRuleCall_10_0()); }
	ruleTLStatement{ after(grammarAccess.getTLLoopAccess().getStatementsTLStatementParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLIf__ConditionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLIfAccess().getConditionTLBoolExprParserRuleCall_2_0()); }
	ruleTLBoolExpr{ after(grammarAccess.getTLIfAccess().getConditionTLBoolExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLIf__IfBlockAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLIfAccess().getIfBlockTLStatementParserRuleCall_5_0()); }
	ruleTLStatement{ after(grammarAccess.getTLIfAccess().getIfBlockTLStatementParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLIf__ElseBlockAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLIfAccess().getElseBlockTLStatementParserRuleCall_7_2_0()); }
	ruleTLStatement{ after(grammarAccess.getTLIfAccess().getElseBlockTLStatementParserRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLBoolExprNot__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLBoolExprNotAccess().getExpressionTLBoolExprParserRuleCall_2_0()); }
	ruleTLBoolExpr{ after(grammarAccess.getTLBoolExprNotAccess().getExpressionTLBoolExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLBoolExprEmpty__RegionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLBoolExprEmptyAccess().getRegionNodeExpressionParserRuleCall_0_0()); }
	ruleNodeExpression{ after(grammarAccess.getTLBoolExprEmptyAccess().getRegionNodeExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


