/*
 * generated by Xtext
 */
package de.ubt.ai7.csv_validator.formatting

import com.google.inject.Inject
import de.ubt.ai7.csv_validator.services.SculptGrammarAccess
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter
import org.eclipse.xtext.formatting.impl.FormattingConfig

/**
 * This class contains custom formatting declarations.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#formatting
 * on how and when to use it.
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
public class SculptFormatter extends AbstractDeclarativeFormatter {

	@Inject extension SculptGrammarAccess

	override protected configureFormatting(FormattingConfig c) {

		c.setLinewrap(0, 1, 2).before(delimitersRule)
		c.setLinewrap(1, 1, 2).before(typeRule)
		c.setLinewrap(1, 1, 2).before(tokenRule)
		c.setLinewrap(0, 1, 2).before(constraintRule)
		c.setLinewrap(1, 3, 2).after(delimitersRule)

		for (key : findKeywords("TYPES", "RULES", "REGIONS", "TOKENS")) {
			c.setLinewrap(2, 2, 3).before(key);
			c.setLinewrap(1, 1, 3).after(key);
		}
		for (key : findKeywords("Col delim", "List delim")) {
			c.setLinewrap(1, 1, 2).before(key);
		}
		for (key : findKeywords(";")) {
			c.setLinewrap(1, 1, 2).after(key);
			c.setNoSpace().before(key);
		}
		for (key : findKeywords("+", "*", "?")) {
			c.setNoSpace().before(key);
		}
		for (key : findKeywords("=", ":", "->", "=>", "|>", "|", "or", "and", "in")) {
			c.setSpace(" ").around(key);
		}
		for (key : findKeywords("<", ">", ".", "(", ")", "/", "[", "]")) {
			c.setNoSpace().around(key);
		}
		for (key : findKeywords("col", "row", "is", "split")) {
			c.setNoSpace().after(key);
		}

		for (pair : findKeywordPairs('{', '}')) {
			c.setIndentation(pair.first, pair.second)
			c.setLinewrap(1).after(pair.first)
			c.setLinewrap(1).before(pair.second)
			c.setLinewrap(1).after(pair.second)
		}
		for (comma : findKeywords(',')) {
			c.setNoLinewrap().before(comma)
			c.setNoSpace().before(comma)
			c.setNoLinewrap().after(comma)
			c.setSpace(" ").after(comma)
		}

		c.setLinewrap(0, 1, 2).before(SL_COMMENTRule)
		c.setLinewrap(0, 1, 2).before(ML_COMMENTRule)
		c.setLinewrap(0, 1, 1).after(ML_COMMENTRule)

	}

}
